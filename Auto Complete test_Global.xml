<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2018-06-26 07:00:03"><sys_remote_update_set><application display_value="Global">global</application><application_name>Global</application_name><application_scope>global</application_scope><application_version/><collisions/><commit_date/><deleted/><description/><inserted/><name>Auto Complete test</name><origin_sys_id/><parent/><release_date/><remote_base_update_set/><remote_parent_id/><remote_sys_id>4d59eee6dbb21740497856f3ce96193e</remote_sys_id><state>loaded</state><summary/><sys_class_name>sys_remote_update_set</sys_class_name><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>5f214433db369740497856f3ce961916</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><update_set/><update_source/><updated/></sys_remote_update_set><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>item_option_new_07f418bedb761740497856f3ce9619f4</name><payload><![CDATA[<record_update table="item_option_new"><item_option_new action="INSERT_OR_UPDATE"><active>true</active><attributes/><cat_item display_value="Sample Page">3969622adbb21740497856f3ce961996</cat_item><category/><choice_direction>down</choice_direction><choice_field/><choice_table/><create_roles/><default_html_value/><default_value/><delete_roles/><delivery_plan/><description/><display_title>false</display_title><do_not_select_first>false</do_not_select_first><dynamic_default_value/><dynamic_ref_qual/><example_text/><field/><global>false</global><help_tag>More information</help_tag><help_text/><include_none>false</include_none><instructions/><layout>normal</layout><list_table/><lookup_label/><lookup_price/><lookup_table/><lookup_unique>false</lookup_unique><lookup_value/><macro/><mandatory>false</mandatory><map_to_field>false</map_to_field><mask_use_confirmation>false</mask_use_confirmation><mask_use_encryption>false</mask_use_encryption><name>locality</name><order>70</order><price_if_checked>0</price_if_checked><pricing_implications>false</pricing_implications><question_text>City</question_text><read_roles/><rec_lookup_price/><rec_price_if_checked>0</rec_price_if_checked><record/><record_producer_table/><reference/><reference_qual/><reference_qual_condition/><scale_max>5</scale_max><scale_min>0</scale_min><show_help>false</show_help><show_help_on_load>false</show_help_on_load><sp_widget/><summary_macro/><sys_class_name>item_option_new</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:52:39</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>07f418bedb761740497856f3ce9619f4</sys_id><sys_mod_count>1</sys_mod_count><sys_name>City</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>item_option_new_07f418bedb761740497856f3ce9619f4</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:56:19</sys_updated_on><table/><tooltip/><type>6</type><ui_page/><use_dynamic_default>false</use_dynamic_default><use_reference_qualifier>simple</use_reference_qualifier><variable_name/><variable_set/><variable_width/><visibility>1</visibility><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><visible_summary>true</visible_summary><write_roles/></item_option_new><sys_translated_text action="delete_multiple" query="documentkey=07f418bedb761740497856f3ce9619f4"/><fx_price action="delete_multiple" query="id=07f418bedb761740497856f3ce9619f4"/><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>price_if_checked</field><id>07f418bedb761740497856f3ce9619f4</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:52:39</sys_created_on><sys_id>cff418bedb761740497856f3ce9619f5</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:52:39</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>rec_price_if_checked</field><id>07f418bedb761740497856f3ce9619f4</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:52:39</sys_created_on><sys_id>87f418bedb761740497856f3ce9619f5</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:52:39</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price></record_update>]]></payload><payload_hash>-1962076717</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>13214433db369740497856f3ce961918</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642b36f4290000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>City</target_name><type>Variable</type><update_domain>global</update_domain><update_guid>b4d59cbef7761740b98925c1091cea5c</update_guid><update_guid_history>b4d59cbef7761740b98925c1091cea5c:-1962076717,cff418be1e76174026fb8e16c1b49cf8:-1833848136</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>m2m_sp_widget_dependency_3eebfe27db729740497856f3ce961975</name><payload><![CDATA[<record_update table="m2m_sp_widget_dependency"><m2m_sp_widget_dependency action="INSERT_OR_UPDATE"><sp_dependency display_value="GoogleAPI">e544dfaedbf21740497856f3ce9619d9</sp_dependency><sp_widget display_value="GoogleMaps">65db32afdb729740497856f3ce9619cb</sp_widget><sys_class_name>m2m_sp_widget_dependency</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-26 01:57:26</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>3eebfe27db729740497856f3ce961975</sys_id><sys_mod_count>0</sys_mod_count><sys_name>GoogleAPI.GoogleMaps</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>m2m_sp_widget_dependency_3eebfe27db729740497856f3ce961975</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-26 01:57:26</sys_updated_on></m2m_sp_widget_dependency></record_update>]]></payload><payload_hash>1223639</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>17214433db369740497856f3ce96191a</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>16439cf55fa0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>GoogleAPI.GoogleMaps</target_name><type>Widget Dependency</type><update_domain>global</update_domain><update_guid>7aebfe27867297400aed157f9813db77</update_guid><update_guid_history>7aebfe27867297400aed157f9813db77:1223639</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>item_option_new_0073187edb761740497856f3ce9619a1</name><payload><![CDATA[<record_update table="item_option_new"><item_option_new action="INSERT_OR_UPDATE"><active>true</active><attributes/><cat_item display_value="Sample Page">3969622adbb21740497856f3ce961996</cat_item><category/><choice_direction>down</choice_direction><choice_field/><choice_table/><create_roles/><default_html_value/><default_value/><delete_roles/><delivery_plan/><description/><display_title>false</display_title><do_not_select_first>false</do_not_select_first><dynamic_default_value/><dynamic_ref_qual/><example_text/><field/><global>false</global><help_tag>More information</help_tag><help_text/><include_none>false</include_none><instructions/><layout>normal</layout><list_table/><lookup_label/><lookup_price/><lookup_table/><lookup_unique>false</lookup_unique><lookup_value/><macro/><mandatory>false</mandatory><map_to_field>false</map_to_field><mask_use_confirmation>false</mask_use_confirmation><mask_use_encryption>false</mask_use_encryption><name>street_number</name><order>40</order><price_if_checked>0</price_if_checked><pricing_implications>false</pricing_implications><question_text>Street Number</question_text><read_roles/><rec_lookup_price/><rec_price_if_checked>0</rec_price_if_checked><record/><record_producer_table/><reference/><reference_qual/><reference_qual_condition/><scale_max>5</scale_max><scale_min>0</scale_min><show_help>false</show_help><show_help_on_load>false</show_help_on_load><sp_widget/><summary_macro/><sys_class_name>item_option_new</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:45:53</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>0073187edb761740497856f3ce9619a1</sys_id><sys_mod_count>2</sys_mod_count><sys_name>Street Number</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>item_option_new_0073187edb761740497856f3ce9619a1</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:55:47</sys_updated_on><table/><tooltip/><type>6</type><ui_page/><use_dynamic_default>false</use_dynamic_default><use_reference_qualifier>simple</use_reference_qualifier><variable_name/><variable_set/><variable_width/><visibility>1</visibility><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><visible_summary>true</visible_summary><write_roles/></item_option_new><sys_translated_text action="delete_multiple" query="documentkey=0073187edb761740497856f3ce9619a1"/><fx_price action="delete_multiple" query="id=0073187edb761740497856f3ce9619a1"/><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>price_if_checked</field><id>0073187edb761740497856f3ce9619a1</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:45:53</sys_created_on><sys_id>c873187edb761740497856f3ce9619a2</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:45:53</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>rec_price_if_checked</field><id>0073187edb761740497856f3ce9619a1</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:45:53</sys_created_on><sys_id>8073187edb761740497856f3ce9619a2</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:45:53</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price></record_update>]]></payload><payload_hash>1905864704</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>1b214433db369740497856f3ce961917</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642b36791e0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>Street Number</target_name><type>Variable</type><update_domain>global</update_domain><update_guid>41b5d8be5f761740288aec79ffd768c0</update_guid><update_guid_history>41b5d8be5f761740288aec79ffd768c0:1905864704,f39514fe0f76174075c19614958fb8ab:-401740289,c873187e75761740ea8da5e0d7a298a5:-1083924932</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>item_option_new_fa54987edb761740497856f3ce9619ee</name><payload><![CDATA[<record_update table="item_option_new"><item_option_new action="INSERT_OR_UPDATE"><active>true</active><attributes/><cat_item display_value="Sample Page">3969622adbb21740497856f3ce961996</cat_item><category/><choice_direction>down</choice_direction><choice_field/><choice_table/><create_roles/><default_html_value/><default_value/><delete_roles/><delivery_plan/><description/><display_title>false</display_title><do_not_select_first>false</do_not_select_first><dynamic_default_value/><dynamic_ref_qual/><example_text/><field/><global>false</global><help_tag>More information</help_tag><help_text/><include_none>false</include_none><instructions/><layout>normal</layout><list_table/><lookup_label/><lookup_price/><lookup_table/><lookup_unique>false</lookup_unique><lookup_value/><macro/><mandatory>false</mandatory><map_to_field>false</map_to_field><mask_use_confirmation>false</mask_use_confirmation><mask_use_encryption>false</mask_use_encryption><name>number_address</name><order>30</order><price_if_checked>0</price_if_checked><pricing_implications>false</pricing_implications><question_text>Number Address</question_text><read_roles/><rec_lookup_price/><rec_price_if_checked>0</rec_price_if_checked><record/><record_producer_table/><reference/><reference_qual/><reference_qual_condition/><scale_max>5</scale_max><scale_min>0</scale_min><show_help>false</show_help><show_help_on_load>false</show_help_on_load><sp_widget/><summary_macro/><sys_class_name>item_option_new</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:49:54</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>fa54987edb761740497856f3ce9619ee</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Number Address</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>item_option_new_fa54987edb761740497856f3ce9619ee</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:55:45</sys_updated_on><table/><tooltip/><type>6</type><ui_page/><use_dynamic_default>false</use_dynamic_default><use_reference_qualifier>simple</use_reference_qualifier><variable_name/><variable_set/><variable_width/><visibility>1</visibility><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><visible_summary>true</visible_summary><write_roles/></item_option_new><sys_translated_text action="delete_multiple" query="documentkey=fa54987edb761740497856f3ce9619ee"/><fx_price action="delete_multiple" query="id=fa54987edb761740497856f3ce9619ee"/><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>price_if_checked</field><id>fa54987edb761740497856f3ce9619ee</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:49:54</sys_created_on><sys_id>f654987edb761740497856f3ce9619f0</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:49:54</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>rec_price_if_checked</field><id>fa54987edb761740497856f3ce9619ee</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:49:54</sys_created_on><sys_id>be54987edb761740497856f3ce9619ef</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:49:54</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price></record_update>]]></payload><payload_hash>-1114863084</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>1b214433db369740497856f3ce961919</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642b3670080000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>Number Address</target_name><type>Variable</type><update_domain>global</update_domain><update_guid>68b510fe8a7617409c6daeb15a5848bd</update_guid><update_guid_history>68b510fe8a7617409c6daeb15a5848bd:-1114863084,7a5418bea7761740b635d7ff922e5bd8:1870509651</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>item_option_new_860518bedb761740497856f3ce9619fa</name><payload><![CDATA[<record_update table="item_option_new"><item_option_new action="INSERT_OR_UPDATE"><active>true</active><attributes/><cat_item display_value="Sample Page">3969622adbb21740497856f3ce961996</cat_item><category/><choice_direction>down</choice_direction><choice_field/><choice_table/><create_roles/><default_html_value/><default_value/><delete_roles/><delivery_plan/><description/><display_title>false</display_title><do_not_select_first>false</do_not_select_first><dynamic_default_value/><dynamic_ref_qual/><example_text/><field/><global>false</global><help_tag>More information</help_tag><help_text/><include_none>false</include_none><instructions/><layout>normal</layout><list_table/><lookup_label/><lookup_price/><lookup_table/><lookup_unique>false</lookup_unique><lookup_value/><macro/><mandatory>false</mandatory><map_to_field>false</map_to_field><mask_use_confirmation>false</mask_use_confirmation><mask_use_encryption>false</mask_use_encryption><name>country</name><order>80</order><price_if_checked>0</price_if_checked><pricing_implications>false</pricing_implications><question_text>Country</question_text><read_roles/><rec_lookup_price/><rec_price_if_checked>0</rec_price_if_checked><record/><record_producer_table/><reference/><reference_qual/><reference_qual_condition/><scale_max>5</scale_max><scale_min>0</scale_min><show_help>false</show_help><show_help_on_load>false</show_help_on_load><sp_widget/><summary_macro/><sys_class_name>item_option_new</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:52:51</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>860518bedb761740497856f3ce9619fa</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Country</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>item_option_new_860518bedb761740497856f3ce9619fa</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:56:22</sys_updated_on><table/><tooltip/><type>6</type><ui_page/><use_dynamic_default>false</use_dynamic_default><use_reference_qualifier>simple</use_reference_qualifier><variable_name/><variable_set/><variable_width/><visibility>1</visibility><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><visible_summary>true</visible_summary><write_roles/></item_option_new><sys_translated_text action="delete_multiple" query="documentkey=860518bedb761740497856f3ce9619fa"/><fx_price action="delete_multiple" query="id=860518bedb761740497856f3ce9619fa"/><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>price_if_checked</field><id>860518bedb761740497856f3ce9619fa</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:52:51</sys_created_on><sys_id>ca05dcbedb761740497856f3ce9619ee</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:52:51</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>rec_price_if_checked</field><id>860518bedb761740497856f3ce9619fa</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:52:51</sys_created_on><sys_id>4a0518bedb761740497856f3ce9619fb</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:52:51</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price></record_update>]]></payload><payload_hash>78180499</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>1f214433db369740497856f3ce961918</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642b3703980000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>Country</target_name><type>Variable</type><update_domain>global</update_domain><update_guid>f9d550be20761740e236cf62b731907d</update_guid><update_guid_history>f9d550be20761740e236cf62b731907d:78180499,ca05dcbe5076174068e232ef345049f1:-1116140467</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>sp_js_include_467493eedbf21740497856f3ce961936</name><payload><![CDATA[<record_update table="sp_js_include"><sp_js_include action="INSERT_OR_UPDATE"><display_name>https://maps.googleapis.com/maps/api/js?key=&lt;YOURKEY&gt;&amp;libraries=places</display_name><source>url</source><sys_class_name>sp_js_include</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 01:11:07</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>467493eedbf21740497856f3ce961936</sys_id><sys_mod_count>2</sys_mod_count><sys_name>https://maps.googleapis.com/maps/api/js?key=&lt;YOURKEY&gt;&amp;libraries=places</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_ui_script/><sys_update_name>sp_js_include_467493eedbf21740497856f3ce961936</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-24 23:08:09</sys_updated_on><url>https://maps.googleapis.com/maps/api/js?key=AIzaSyDr3Imv6rReJ4CjTSdgUJp4MyInVEtKrCc&amp;libraries=places</url></sp_js_include></record_update>]]></payload><payload_hash>-1863799048</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>23214433db369740497856f3ce96191b</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>164340dff700000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>https://maps.googleapis.com/maps/api/js?key=&lt;YOURKEY&gt;&amp;libraries=places</target_name><type>JS Include</type><update_domain>global</update_domain><update_guid>ed9b815f33b65740bc205956b4081e15</update_guid><update_guid_history>ed9b815f33b65740bc205956b4081e15:-1863799048,ddef94fe6f7617407cca093050bfa1c4:-257084520,578493ee43f2174042189ff2d4dead3b:-785908705</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>sp_widget_50e3dbaedbf21740497856f3ce9619e2</name><payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope) {
	/* widget controller */
	var c = this;
	c.types = [];
	$scope.zoom = '3';
	$scope.location = {};
	$scope.location.lat = '39.1611511';
	$scope.location.lng = '-84.4301499';
	$scope.location.point = false;
	$scope.$on('gmPlacesAutocomplete::placeChanged', function(){
		c.checkValueClear('clear');
			//console.dir($scope.autocompleteModel);
		var place = $scope.autocompleteModel.getPlace();
		
		$scope.location.lat = place.geometry.location.lat();
		$scope.location.lng = place.geometry.location.lng()
		$scope.zoom = '13';
		$scope.location.point = true;
		console.log($scope.location);
console.log(place.geometry.location.lat());
		try{
			$scope.page.g_form.setValue('full_address', place.formatted_address);
			$scope.page.g_form.setValue('number_address', place.name);
		}catch(err){}
			
			for (var i = 0; i &lt; place.address_components.length; i++) {
				var addressType = place.address_components[i].types[0];
				var value = place.address_components[i].long_name;
				
				try{
					$scope.page.g_form.setValue(addressType, value);
				}catch(err2){}
					
							if(c.types.indexOf(addressType) === -1){
						c.types.push(addressType +'');
					}
					
				}
			});
			
			c.checkValueClear = function(clear){
				if(c.types.length &gt; 0 &amp;&amp; (scope.autocompleteModel == '' || clear == 'clear')){
					$scope.zoom = '3';
					$scope.location.point = false;
					for (var i = 0; i &lt; c.types.length; i++) {
						try{
							$scope.page.g_form.setValue(c.types[i], '');
						}catch(err){}
							
						}
						try{
							$scope.page.g_form.setValue('full_address', '');
							$scope.page.g_form.setValue('number_address', '');
						}catch(err3){}
							
						}
					};
				}
				
				]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;input, button, select, textarea {
    display: block;
    width: 100%;
    height: 34px;
    padding: 6px 12px;
    font-size: 14px;
    line-height: 1.42857;
    color: #555555;
    background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 4px;
    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    -webkit-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
}
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id/&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;new Test&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-06-23 01:08:18&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;50e3dbaedbf21740497856f3ce9619e2&lt;/sys_id&gt;&lt;sys_mod_count&gt;83&lt;/sys_mod_count&gt;&lt;sys_name&gt;new Test&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_50e3dbaedbf21740497856f3ce9619e2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-06-26 03:17:33&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;ng-map id="map" zoom="{{zoom}}" center="[{{location.lat}}, {{location.lng}}]"&gt;
    &lt;marker ng-if='location.point' position="[{{location.lat}}, {{location.lng}}]" title="hello"&gt;&lt;/marker&gt;
  &lt;/ng-map&gt;

&lt;h1&gt;Google maps places demo page&lt;/h1&gt;
        &lt;input id='mapInput' type="text" gm-places-autocomplete="autocompleteOptions" ng-change="c.checkValueClear()" ng-model="autocompleteModel" /&gt;
]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload><payload_hash>-1983550111</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>2f214433db369740497856f3ce96191b</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1643a18b04b0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>new Test</target_name><type>Widget</type><update_domain>global</update_domain><update_guid>284ec32b8cb297401eda54121c1fde80</update_guid><update_guid_history>284ec32b8cb297401eda54121c1fde80:-1983550111,d702cba3b8b29740f1d442d15144a019:825260578,22f1c3a3b4b297409aabe6d55ccd9274:-2028328622,e8f147a33cb297400ace54471683bcb0:-821919269,7dc14b63a4b29740b9b4eaa69cb0a670:-617936679,9d7187a35eb297409f78350cd5123479:-1901528099,c75147a35eb29740252c5de6ac24cda9:2120405501,ca1143a334b29740b6e1b098e1d68158:-61103459,5ff083a34eb2974000e444298e2883e2:-211244802,a8e087237ab29740ed56a325dcf5f981:1017426762,59d08b63f3b297408cfbe7449385275e:-1901130319,83c0cf6363b29740956a2e147c81b9b3:566353197,76b08f639ab29740fe09661a11a84f0b:-768840493,b8b0cf63d0b297400e1d3d2dac3512a0:-325343277,46400f63a8b29740794112e5dc07af4a:-1952475890,22204b6388b297406cae82c1d6d2db88:-1069718758,77008b63f9b29740ce56c0cd39b26357:-466135794,cbff7a63a1b297409b766174d58e1b52:-1527911752,cfcf7e2348b2974094e60dc0aa1268f9:817470158,8f4ff26364b297400be7e3488dc1124b:-1373692284,c00f326359b29740b7af951a00b689ba:1180972745,14febe23b2b2974071127abc1ce0a81e:-810936630,f7ae3623afb29740f784d8ad38a8e720:-1424497045,f56efa232fb29740914713eef4798e5f:-1025575229,52fdb62323b29740338f702e1564e085:1668960611,fa22c1973eb657401e9aae77468b8883:-1164028800,c3b52c7633b61740d57491519b7b2be6:2099169769,64b1687674b61740b2280accd6d6790b:1659525050,1f71683665b61740e757f473324af584:582208639,9df0ecf2b7b61740e4bdafa5da525599:-1253856217,c0d020768eb61740615714cb75c013d4:943502404,aa80207646b617405f2d43ba78c2b33b:-1679411095,db50e036f9b61740e108fad780e7a02f:1395680661,86af90362bb617401a14f920e15fbd03:227873944,642f90364eb61740dab78f90543f83d4:-1535585130,6d0f5036d4b61740f9f20195bda7b1fd:1564784598,8fee103630b617401d749f0eccc41fe1:921073923,ffae1cf2eeb61740d8445ac734451753:-1580598492,c0ae5cf214b61740f5ff7c85dfaefbb8:-953414191,c96ed8f2deb61740bb0af79237255cb9:1946821716,ec3e94fecb7617409f517f0021b53b6b:1982920018,96dd54720db617404f504010e767f36d:-733264397,73ad14f2fcb61740cf0b2558bec5f9bf:229771741,875590fe03761740b62d70bd93529baa:-733264397,2f34547ec076174026ae8a61cd4e821a:-2104559948,b9a2d03ef5761740e6a1c058bfa8251f:430974675,cd72187e40761740dcf3c3f3f9c8439c:-1366995468,f332507ecb7617400214a5d655979e73:-2030500031,3602107eef761740252e1e6a6e160df8:114124008,3271107e377617402d2cf2da4f6ec7e5:2115957543,2b419cfab6761740073553bd58bcc6e2:192292027,dfd0d83ee976174052f16deca7cc13ca:765418964,3c00143e3a7617409d96a3d7bcfcf5ce:-688051933,83cf40fa3b7617404297af6b13f770a3:-980217958,07af403e5e761740c3cfef5861030fbf:284301629,930f0cfae07617401be2e41ddffd12ae:-1081309125,f04e84faec7617405e623636609727dc:1145133703,6e6c04bafa761740e93e6d0f1662c26f:-36501332,895cc0baa6761740cea0dd10572feb85:-1301454251,784cc0ba1a761740001b9f040fb8b70a:-1180838444,4c3c80ba1f761740515e9c8e80316542:-1163483603,47fbc87abe761740d7398fee30947d07:46276478,0bbb4cf68e76174095c2f415ba9f9a2a:1010209723,4f8b4c7a597617404b3c0b2774d0bc31:-2112676223,e06bcc3a36761740fa9ba8bc47c9b577:-158612587,6f4bcc3a4e761740e3f16ccf53f3b661:-657858518,80694cf649761740f958a895c229e9d4:1207330037,75494cf63d761740439b1ae95e260912:597482803,08d7c4be05361740c99c21c75e82d3ae:241458327,adc7c07207761740709f9c36c6156f71:1095291333,f2a74876617617400bce521f7a1ed85b:241458327,2777bfee4b36174012fca8af518b8354:-1622612704,be07bfae443617409eccbad087d2d012:-1491265964,58a6f7ae5936174065b32b4f330e41b6:-1414731326,d0a5ffae6736174055aa2a808988db75:1677288668,0285b3ae85361740eeddae9679ad197a:-500114287,5dd3e3a6033617400ffe4bf751d44939:324012469,9d432fee67f21740f05065c87edf27ae:-1092475851,5ab263e2403617403e4124422345a121:699374390,a00613226c361740fbd7ee20cfa39ebb:-2039151248,46b557ee97f217405776648a46c57a0d:-1346642134,80b55bee9cf217409b00fa092f197882:779866362,e88593eebcf21740d9f6226cd529a3d0:-123837994,b1e31faebaf21740edf59b1095875845:996583915</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>m2m_sp_dependency_js_include_fc8cfaafdb729740497856f3ce961977</name><payload><![CDATA[<record_update table="m2m_sp_dependency_js_include"><m2m_sp_dependency_js_include action="INSERT_OR_UPDATE"><order>100</order><sp_dependency display_value="GoogleAPI">e544dfaedbf21740497856f3ce9619d9</sp_dependency><sp_js_include display_value="angularjs-google-amps">8c6cbaafdb729740497856f3ce9619ab</sp_js_include><sys_class_name>m2m_sp_dependency_js_include</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-26 02:00:02</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>fc8cfaafdb729740497856f3ce961977</sys_id><sys_mod_count>0</sys_mod_count><sys_name>GoogleAPI.angularjs-google-amps</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>m2m_sp_dependency_js_include_fc8cfaafdb729740497856f3ce961977</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-26 02:00:02</sys_updated_on></m2m_sp_dependency_js_include></record_update>]]></payload><payload_hash>-1091483742</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>53214433db369740497856f3ce96191a</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>16439d1b50b0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>GoogleAPI.angularjs-google-amps</target_name><type>Dependency JS Includes</type><update_domain>global</update_domain><update_guid>b48cfaaf4e729740149a01801fa7ad79</update_guid><update_guid_history>b48cfaaf4e729740149a01801fa7ad79:-1091483742</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>item_option_new_ac94d8bedb761740497856f3ce961931</name><payload><![CDATA[<record_update table="item_option_new"><item_option_new action="INSERT_OR_UPDATE"><active>true</active><attributes/><cat_item display_value="Sample Page">3969622adbb21740497856f3ce961996</cat_item><category/><choice_direction>down</choice_direction><choice_field/><choice_table/><create_roles/><default_html_value/><default_value/><delete_roles/><delivery_plan/><description/><display_title>false</display_title><do_not_select_first>false</do_not_select_first><dynamic_default_value/><dynamic_ref_qual/><example_text/><field/><global>false</global><help_tag>More information</help_tag><help_text/><include_none>false</include_none><instructions/><layout>normal</layout><list_table/><lookup_label/><lookup_price/><lookup_table/><lookup_unique>false</lookup_unique><lookup_value/><macro/><mandatory>false</mandatory><map_to_field>false</map_to_field><mask_use_confirmation>false</mask_use_confirmation><mask_use_encryption>false</mask_use_encryption><name>neighborhood</name><order>60</order><price_if_checked>0</price_if_checked><pricing_implications>false</pricing_implications><question_text>Neighborhood</question_text><read_roles/><rec_lookup_price/><rec_price_if_checked>0</rec_price_if_checked><record/><record_producer_table/><reference/><reference_qual/><reference_qual_condition/><scale_max>5</scale_max><scale_min>0</scale_min><show_help>false</show_help><show_help_on_load>false</show_help_on_load><sp_widget/><summary_macro/><sys_class_name>item_option_new</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:50:50</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>ac94d8bedb761740497856f3ce961931</sys_id><sys_mod_count>3</sys_mod_count><sys_name>Neighborhood</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>item_option_new_ac94d8bedb761740497856f3ce961931</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:56:15</sys_updated_on><table/><tooltip/><type>6</type><ui_page/><use_dynamic_default>false</use_dynamic_default><use_reference_qualifier>simple</use_reference_qualifier><variable_name/><variable_set/><variable_width/><visibility>1</visibility><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><visible_summary>true</visible_summary><write_roles/></item_option_new><sys_translated_text action="delete_multiple" query="documentkey=ac94d8bedb761740497856f3ce961931"/><fx_price action="delete_multiple" query="id=ac94d8bedb761740497856f3ce961931"/><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>price_if_checked</field><id>ac94d8bedb761740497856f3ce961931</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:50:50</sys_created_on><sys_id>a894d8bedb761740497856f3ce961933</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:50:50</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>rec_price_if_checked</field><id>ac94d8bedb761740497856f3ce961931</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:50:50</sys_created_on><sys_id>6094d8bedb761740497856f3ce961933</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:50:50</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price></record_update>]]></payload><payload_hash>121776007</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>57214433db369740497856f3ce961919</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642b36e7fb0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>Neighborhood</target_name><type>Variable</type><update_domain>global</update_domain><update_guid>84d594fee0761740c58f3b3bb6d4ad65</update_guid><update_guid_history>84d594fee0761740c58f3b3bb6d4ad65:121776007,e1d458be07761740fb2107d84326fa14:440660131,3db4187e437617409aca63b78a2a9cf1:1432250584,a894d8be857617407aa15a69e3090036:672606936</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>DELETE</action><application display_value="Global">global</application><category>customer</category><comments/><name>item_option_new_6f8a222adbb21740497856f3ce9619d1</name><payload><![CDATA[<record_update table="item_option_new"><item_option_new action="DELETE"><active>true</active><attributes/><cat_item display_value="Sample Page">3969622adbb21740497856f3ce961996</cat_item><category/><choice_direction>down</choice_direction><choice_field/><choice_table/><create_roles/><default_html_value/><default_value/><delete_roles/><delivery_plan/><description/><display_title>false</display_title><do_not_select_first>false</do_not_select_first><dynamic_default_value/><dynamic_ref_qual/><example_text/><field/><global>false</global><help_tag>More information</help_tag><help_text/><include_none>false</include_none><instructions/><layout>normal</layout><list_table/><lookup_label/><lookup_price/><lookup_table/><lookup_unique>false</lookup_unique><lookup_value/><macro/><mandatory>false</mandatory><map_to_field>false</map_to_field><mask_use_confirmation>false</mask_use_confirmation><mask_use_encryption>false</mask_use_encryption><name>color</name><order/><price_if_checked>0</price_if_checked><pricing_implications>false</pricing_implications><question_text>color</question_text><read_roles/><rec_lookup_price/><rec_price_if_checked>0</rec_price_if_checked><record/><record_producer_table/><reference/><reference_qual/><reference_qual_condition/><scale_max>5</scale_max><scale_min>0</scale_min><show_help>false</show_help><show_help_on_load>false</show_help_on_load><sp_widget/><summary_macro/><sys_class_name>item_option_new</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-22 22:07:51</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>6f8a222adbb21740497856f3ce9619d1</sys_id><sys_mod_count>0</sys_mod_count><sys_name>color</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>item_option_new_6f8a222adbb21740497856f3ce9619d1</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-22 22:07:51</sys_updated_on><table/><tooltip/><type>6</type><ui_page/><use_dynamic_default>false</use_dynamic_default><use_reference_qualifier>simple</use_reference_qualifier><variable_name/><variable_set/><variable_width/><visibility>1</visibility><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><visible_summary>true</visible_summary><write_roles/></item_option_new><sys_translated_text action="delete_multiple" query="documentkey=6f8a222adbb21740497856f3ce9619d1"/><fx_price action="delete_multiple" query="id=6f8a222adbb21740497856f3ce9619d1"/></record_update>]]></payload><payload_hash>-1882716859</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>5b214433db369740497856f3ce961918</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642b14a6170000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>color</target_name><type>Variable</type><update_domain>global</update_domain><update_guid>773d4cbab0761740c0173cda2bcee464</update_guid><update_guid_history>773d4cbab0761740c0173cda2bcee464:-1882716859,269a226ab9b21740eba120e39227ee40:2025372160</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>sys_ui_script_3c7cfaafdb729740497856f3ce961971</name><payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_script"&gt;&lt;sys_ui_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;description/&gt;&lt;global&gt;false&lt;/global&gt;&lt;name&gt;angularjs-google-maps&lt;/name&gt;&lt;script&gt;&lt;![CDATA[(function(root, factory) {
if (typeof exports === "object") {
module.exports = factory(require('angular'));
} else if (typeof define === "function" &amp;&amp; define.amd) {
define(['angular'], factory);
} else{
factory(root.angular);
}
}(this, function(angular) {
/**
 * AngularJS Google Maps Ver. 1.18.4
 *
 * The MIT License (MIT)
 * 
 * Copyright (c) 2014, 2015, 1016 Allen Kim
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
angular.module('ngMap', []);

/**
 * @ngdoc controller
 * @name MapController
 */
(function() {
  'use strict';
  var Attr2MapOptions;

  var __MapController = function(
      $scope, $element, $attrs, $parse, $interpolate, _Attr2MapOptions_, NgMap, NgMapPool, escapeRegExp
    ) {
    Attr2MapOptions = _Attr2MapOptions_;
    var vm = this;
    var exprStartSymbol = $interpolate.startSymbol();
    var exprEndSymbol = $interpolate.endSymbol();

    vm.mapOptions; /** @memberof __MapController */
    vm.mapEvents;  /** @memberof __MapController */
    vm.eventListeners;  /** @memberof __MapController */

    /**
     * Add an object to the collection of group
     * @memberof __MapController
     * @function addObject
     * @param groupName the name of collection that object belongs to
     * @param obj  an object to add into a collection, i.e. marker, shape
     */
    vm.addObject = function(groupName, obj) {
      if (vm.map) {
        vm.map[groupName] = vm.map[groupName] || {};
        var len = Object.keys(vm.map[groupName]).length;
        vm.map[groupName][obj.id || len] = obj;

        if (vm.map instanceof google.maps.Map) {
          //infoWindow.setMap works like infoWindow.open
          if (groupName != "infoWindows" &amp;&amp; obj.setMap) {
            obj.setMap &amp;&amp; obj.setMap(vm.map);
          }
          if (obj.centered &amp;&amp; obj.position) {
            vm.map.setCenter(obj.position);
          }
          (groupName == 'markers') &amp;&amp; vm.objectChanged('markers');
          (groupName == 'customMarkers') &amp;&amp; vm.objectChanged('customMarkers');
        }
      }
    };

    /**
     * Delete an object from the collection and remove from map
     * @memberof __MapController
     * @function deleteObject
     * @param {Array} objs the collection of objects. i.e., map.markers
     * @param {Object} obj the object to be removed. i.e., marker
     */
    vm.deleteObject = function(groupName, obj) {
      /* delete from group */
      if (obj.map) {
        var objs = obj.map[groupName];
        for (var name in objs) {
          if (objs[name] === obj) {
            void 0;
            google.maps.event.clearInstanceListeners(obj);
            delete objs[name];
          }
        }

        /* delete from map */
        obj.map &amp;&amp; obj.setMap &amp;&amp; obj.setMap(null);

        (groupName == 'markers') &amp;&amp; vm.objectChanged('markers');
        (groupName == 'customMarkers') &amp;&amp; vm.objectChanged('customMarkers');
      }
    };

    /**
     * @memberof __MapController
     * @function observeAttrSetObj
     * @param {Hash} orgAttrs attributes before its initialization
     * @param {Hash} attrs    attributes after its initialization
     * @param {Object} obj    map object that an action is to be done
     * @description watch changes of attribute values and
     * do appropriate action based on attribute name
     */
    vm.observeAttrSetObj = function(orgAttrs, attrs, obj) {
      if (attrs.noWatcher) {
        return false;
      }
      var attrsToObserve = Attr2MapOptions.getAttrsToObserve(orgAttrs);
      for (var i=0; i&lt;attrsToObserve.length; i++) {
        var attrName = attrsToObserve[i];
        attrs.$observe(attrName, NgMap.observeAndSet(attrName, obj));
      }
    };

    /**
     * @memberof __MapController
     * @function zoomToIncludeMarkers
     */
    vm.zoomToIncludeMarkers = function() {
      // Only fit to bounds if we have any markers
      // object.keys is supported in all major browsers (IE9+)
      if ((vm.map.markers != null &amp;&amp; Object.keys(vm.map.markers).length &gt; 0) || (vm.map.customMarkers != null &amp;&amp; Object.keys(vm.map.customMarkers).length &gt; 0)) {
        var bounds = new google.maps.LatLngBounds();
        for (var k1 in vm.map.markers) {
          bounds.extend(vm.map.markers[k1].getPosition());
        }
        for (var k2 in vm.map.customMarkers) {
          bounds.extend(vm.map.customMarkers[k2].getPosition());
        }
    	  if (vm.mapOptions.maximumZoom) {
    		  vm.enableMaximumZoomCheck = true; //enable zoom check after resizing for markers
    	  }
        vm.map.fitBounds(bounds);
      }
    };

    /**
     * @memberof __MapController
     * @function objectChanged
     * @param {String} group name of group e.g., markers
     */
    vm.objectChanged = function(group) {
      if ( vm.map &amp;&amp;
        (group == 'markers' || group == 'customMarkers') &amp;&amp;
        vm.map.zoomToIncludeMarkers == 'auto'
      ) {
        vm.zoomToIncludeMarkers();
      }
    };

    /**
     * @memberof __MapController
     * @function initializeMap
     * @description
     *  . initialize Google map on &lt;div&gt; tag
     *  . set map options, events, and observers
     *  . reset zoom to include all (custom)markers
     */
    vm.initializeMap = function() {
      var mapOptions = vm.mapOptions,
          mapEvents = vm.mapEvents;

      var lazyInitMap = vm.map; //prepared for lazy init
      vm.map = NgMapPool.getMapInstance($element[0]);
      NgMap.setStyle($element[0]);

      // set objects for lazyInit
      if (lazyInitMap) {

        /**
         * rebuild mapOptions for lazyInit
         * because attributes values might have been changed
         */
        var filtered = Attr2MapOptions.filter($attrs);
        var options = Attr2MapOptions.getOptions(filtered);
        var controlOptions = Attr2MapOptions.getControlOptions(filtered);
        mapOptions = angular.extend(options, controlOptions);
        void 0;

        for (var group in lazyInitMap) {
          var groupMembers = lazyInitMap[group]; //e.g. markers
          if (typeof groupMembers == 'object') {
            for (var id in groupMembers) {
              vm.addObject(group, groupMembers[id]);
            }
          }
        }
        vm.map.showInfoWindow = vm.showInfoWindow;
        vm.map.hideInfoWindow = vm.hideInfoWindow;
      }

      // set options
      mapOptions.zoom = (mapOptions.zoom &amp;&amp; !isNaN(mapOptions.zoom)) ? +mapOptions.zoom : 15;
      var center = mapOptions.center;
      var exprRegExp = new RegExp(escapeRegExp(exprStartSymbol) + '.*' + escapeRegExp(exprEndSymbol));

      if (!mapOptions.center ||
        ((typeof center === 'string') &amp;&amp; center.match(exprRegExp))
      ) {
        mapOptions.center = new google.maps.LatLng(0, 0);
      } else if( (typeof center === 'string') &amp;&amp; center.match(/^[0-9.-]*,[0-9.-]*$/) ){
        var lat = parseFloat(center.split(',')[0]);
        var lng = parseFloat(center.split(',')[1]);
        mapOptions.center = new google.maps.LatLng(lat, lng);
      } else if (!(center instanceof google.maps.LatLng)) {
        var geoCenter = mapOptions.center;
        delete mapOptions.center;
        NgMap.getGeoLocation(geoCenter, mapOptions.geoLocationOptions).
          then(function (latlng) {
            vm.map.setCenter(latlng);
            var geoCallback = mapOptions.geoCallback;
            geoCallback &amp;&amp; $parse(geoCallback)($scope);
          }, function () {
            if (mapOptions.geoFallbackCenter) {
              vm.map.setCenter(mapOptions.geoFallbackCenter);
            }
          });
      }
      vm.map.setOptions(mapOptions);

      // set events
      for (var eventName in mapEvents) {
        var event = mapEvents[eventName];
        var listener = google.maps.event.addListener(vm.map, eventName, event);
        vm.eventListeners[eventName] = listener;
      }

      // set observers
      vm.observeAttrSetObj(orgAttrs, $attrs, vm.map);
      vm.singleInfoWindow = mapOptions.singleInfoWindow;

      google.maps.event.trigger(vm.map, 'resize');

      google.maps.event.addListenerOnce(vm.map, "idle", function () {
        NgMap.addMap(vm);
        if (mapOptions.zoomToIncludeMarkers) {
          vm.zoomToIncludeMarkers();
        }
        //TODO: it's for backward compatibiliy. will be removed
        $scope.map = vm.map;
        $scope.$emit('mapInitialized', vm.map);

        //callback
        if ($attrs.mapInitialized) {
          $parse($attrs.mapInitialized)($scope, {map: vm.map});
        }
      });

	  //add maximum zoom listeners if zoom-to-include-markers and and maximum-zoom are valid attributes
	  if (mapOptions.zoomToIncludeMarkers &amp;&amp; mapOptions.maximumZoom) {
	    google.maps.event.addListener(vm.map, 'zoom_changed', function() {
          if (vm.enableMaximumZoomCheck == true) {
			vm.enableMaximumZoomCheck = false;
	        google.maps.event.addListenerOnce(vm.map, 'bounds_changed', function() {
		      vm.map.setZoom(Math.min(mapOptions.maximumZoom, vm.map.getZoom()));
		    });
	  	  }
	    });
	  }
    };

    $scope.google = google; //used by $scope.eval to avoid eval()

    /**
     * get map options and events
     */
    var orgAttrs = Attr2MapOptions.orgAttributes($element);
    var filtered = Attr2MapOptions.filter($attrs);
    var options = Attr2MapOptions.getOptions(filtered, {scope: $scope});
    var controlOptions = Attr2MapOptions.getControlOptions(filtered);
    var mapOptions = angular.extend(options, controlOptions);
    var mapEvents = Attr2MapOptions.getEvents($scope, filtered);
    void 0;
    Object.keys(mapEvents).length &amp;&amp; void 0;

    vm.mapOptions = mapOptions;
    vm.mapEvents = mapEvents;
    vm.eventListeners = {};

    if (options.lazyInit) { // allows controlled initialization
      // parse angular expression for dynamic ids
      if (!!$attrs.id &amp;&amp;
      	  // starts with, at position 0
	  $attrs.id.indexOf(exprStartSymbol, 0) === 0 &amp;&amp;
	  // ends with
	  $attrs.id.indexOf(exprEndSymbol, $attrs.id.length - exprEndSymbol.length) !== -1) {
        var idExpression = $attrs.id.slice(2,-2);
        var mapId = $parse(idExpression)($scope);
      } else {
        var mapId = $attrs.id;
      }
      vm.map = {id: mapId}; //set empty, not real, map
      NgMap.addMap(vm);
    } else {
      vm.initializeMap();
    }

    //Trigger Resize
    if(options.triggerResize) {
      google.maps.event.trigger(vm.map, 'resize');
    }

    $element.bind('$destroy', function() {
      NgMapPool.returnMapInstance(vm.map);
      NgMap.deleteMap(vm);
    });
  }; // __MapController

  __MapController.$inject = [
    '$scope', '$element', '$attrs', '$parse', '$interpolate', 'Attr2MapOptions', 'NgMap', 'NgMapPool', 'escapeRegexpFilter'
  ];
  angular.module('ngMap').controller('__MapController', __MapController);
})();

/**
 * @ngdoc directive
 * @name bicycling-layer
 * @param Attr2Options {service}
 *   convert html attribute to Google map api options
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @example
 *
 *   &lt;map zoom="13" center="34.04924594193164, -118.24104309082031"&gt;
 *     &lt;bicycling-layer&gt;&lt;/bicycling-layer&gt;
 *    &lt;/map&gt;
 */
(function() {
  'use strict';
  var parser;

  var linkFunc = function(scope, element, attrs, mapController) {
    mapController = mapController[0]||mapController[1];
    var orgAttrs = parser.orgAttributes(element);
    var filtered = parser.filter(attrs);
    var options = parser.getOptions(filtered, {scope: scope});
    var events = parser.getEvents(scope, filtered);

    void 0;

    var layer = getLayer(options, events);
    mapController.addObject('bicyclingLayers', layer);
    mapController.observeAttrSetObj(orgAttrs, attrs, layer);  //observers
    element.bind('$destroy', function() {
      mapController.deleteObject('bicyclingLayers', layer);
    });
  };

  var getLayer = function(options, events) {
    var layer = new google.maps.BicyclingLayer(options);
    for (var eventName in events) {
      google.maps.event.addListener(layer, eventName, events[eventName]);
    }
    return layer;
  };

  var bicyclingLayer= function(Attr2MapOptions) {
    parser = Attr2MapOptions;
    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],
      link: linkFunc
     };
  };
  bicyclingLayer.$inject = ['Attr2MapOptions'];

  angular.module('ngMap').directive('bicyclingLayer', bicyclingLayer);
})();

/**
 * @ngdoc directive
 * @name custom-control
 * @param Attr2Options {service} convert html attribute to Google map api options
 * @param $compile {service} AngularJS $compile service
 * @description
 *   Build custom control and set to the map with position
 *
 *   Requires:  map directive
 *
 *   Restrict To:  Element
 *
 * @attr {String} position position of this control
 *        i.e. TOP_RIGHT
 * @attr {Number} index index of the control
 * @example
 *
 * Example:
 *  &lt;map center="41.850033,-87.6500523" zoom="3"&gt;
 *    &lt;custom-control id="home" position="TOP_LEFT" index="1"&gt;
 *      &lt;div style="background-color: white;"&gt;
 *        &lt;b&gt;Home&lt;/b&gt;
 *      &lt;/div&gt;
 *    &lt;/custom-control&gt;
 *  &lt;/map&gt;
 *
 */
(function() {
  'use strict';
  var parser, NgMap;

  var linkFunc = function(scope, element, attrs, mapController, $transclude) {
    mapController = mapController[0]||mapController[1];
    var filtered = parser.filter(attrs);
    var options = parser.getOptions(filtered, {scope: scope});
    var events = parser.getEvents(scope, filtered);
    var innerScope = scope.$new();

    /**
     * build a custom control element
     */
    var customControlEl = element[0].parentElement.removeChild(element[0]);
    var content = $transclude( innerScope, function( clone ) {
      element.empty();
      element.append( clone );
      element.on( '$destroy', function() {
        innerScope.$destroy();
      });
    });
    

    /**
     * set events
     */
    for (var eventName in events) {
      google.maps.event.addDomListener(customControlEl, eventName, events[eventName]);
    }

    mapController.addObject('customControls', customControlEl);
    var position = options.position;
    mapController.map.controls[google.maps.ControlPosition[position]].push(customControlEl);

    element.bind('$destroy', function() {
      mapController.deleteObject('customControls', customControlEl);
    });
  };

  var customControl =  function(Attr2MapOptions, _NgMap_)  {
    parser = Attr2MapOptions, NgMap = _NgMap_;

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],
      link: linkFunc,
      transclude: true
    }; // return
  };
  customControl.$inject = ['Attr2MapOptions', 'NgMap'];

  angular.module('ngMap').directive('customControl', customControl);
})();

/**
 * @ngdoc directive
 * @memberof ngmap
 * @name custom-marker
 * @param Attr2Options {service} convert html attribute to Google map api options
 * @param $timeout {service} AngularJS $timeout
 * @description
 *   Marker with html
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @attr {String} position required, position on map
 * @attr {Number} z-index optional
 * @attr {Boolean} visible optional
 * @example
 *
 * Example:
 *   &lt;map center="41.850033,-87.6500523" zoom="3"&gt;
 *     &lt;custom-marker position="41.850033,-87.6500523"&gt;
 *       &lt;div&gt;
 *         &lt;b&gt;Home&lt;/b&gt;
 *       &lt;/div&gt;
 *     &lt;/custom-marker&gt;
 *   &lt;/map&gt;
 *
 */
/* global document */
(function() {
  'use strict';
  var parser, $timeout, $compile, NgMap;

  var supportedTransform = (function getSupportedTransform() {
    var prefixes = 'transform WebkitTransform MozTransform OTransform msTransform'.split(' ');
    var div = document.createElement('div');
    for(var i = 0; i &lt; prefixes.length; i++) {
      if(div &amp;&amp; div.style[prefixes[i]] !== undefined) {
        return prefixes[i];
      }
    }
    return false;
  })();

  var CustomMarker = function(options) {
    options = options || {};

    this.el = document.createElement('div');
    this.el.style.display = 'block';
    this.el.style.visibility = "hidden";
    this.visible = true;
    for (var key in options) { /* jshint ignore:line */
     this[key] = options[key];
    }
  };

  var setCustomMarker = function() {

    CustomMarker.prototype = new google.maps.OverlayView();

    CustomMarker.prototype.setContent = function(html, scope) {
      this.el.innerHTML = html;
      this.el.style.position = 'absolute';
      this.el.style.top = 0;
      this.el.style.left = 0;
      if (scope) {
        $compile(angular.element(this.el).contents())(scope);
      }
    };

    CustomMarker.prototype.getDraggable = function() {
      return this.draggable;
    };

    CustomMarker.prototype.setDraggable = function(draggable) {
      this.draggable = draggable;
    };

    CustomMarker.prototype.getPosition = function() {
      return this.position;
    };

    CustomMarker.prototype.setPosition = function(position) {
      position &amp;&amp; (this.position = position); /* jshint ignore:line */
      var _this = this;
      if (this.getProjection() &amp;&amp; typeof this.position.lng == 'function') {
        void 0;
        var setPosition = function() {
          if (!_this.getProjection()) { return; }
          var posPixel = _this.getProjection().fromLatLngToDivPixel(_this.position);
          var x = Math.round(posPixel.x - (_this.el.offsetWidth/2));
          var y = Math.round(posPixel.y - _this.el.offsetHeight - 10); // 10px for anchor
          if (supportedTransform) {
            _this.el.style[supportedTransform] = "translate(" + x + "px, " + y + "px)";
          } else {
            _this.el.style.left = x + "px";
            _this.el.style.top = y + "px";
          }
          _this.el.style.visibility = "visible";
        };
        if (_this.el.offsetWidth &amp;&amp; _this.el.offsetHeight) {
          setPosition();
        } else {
          //delayed left/top calculation when width/height are not set instantly
          $timeout(setPosition, 300);
        }
      }
    };

    CustomMarker.prototype.setZIndex = function(zIndex) {
      if (zIndex === undefined) return;
      (this.zIndex !== zIndex) &amp;&amp; (this.zIndex = zIndex); /* jshint ignore:line */
      (this.el.style.zIndex !== this.zIndex) &amp;&amp; (this.el.style.zIndex = this.zIndex);
    };

    CustomMarker.prototype.getVisible = function() {
      return this.visible;
    };

    CustomMarker.prototype.setVisible = function(visible) {
      if (this.el.style.display === 'none' &amp;&amp; visible)
      {
          this.el.style.display = 'block';
      } else if (this.el.style.display !== 'none' &amp;&amp; !visible) {
          this.el.style.display = 'none';
      }
      this.visible = visible;
    };

    CustomMarker.prototype.addClass = function(className) {
      var classNames = this.el.className.trim().split(' ');
      (classNames.indexOf(className) == -1) &amp;&amp; classNames.push(className); /* jshint ignore:line */
      this.el.className = classNames.join(' ');
    };

    CustomMarker.prototype.removeClass = function(className) {
      var classNames = this.el.className.split(' ');
      var index = classNames.indexOf(className);
      (index &gt; -1) &amp;&amp; classNames.splice(index, 1); /* jshint ignore:line */
      this.el.className = classNames.join(' ');
    };

    CustomMarker.prototype.onAdd = function() {
      this.getPanes().overlayMouseTarget.appendChild(this.el);
    };

    CustomMarker.prototype.draw = function() {
      this.setPosition();
      this.setZIndex(this.zIndex);
      this.setVisible(this.visible);
    };

    CustomMarker.prototype.onRemove = function() {
      this.el.parentNode.removeChild(this.el);
      //this.el = null;
    };
  };

  var linkFunc = function(orgHtml, varsToWatch) {
    //console.log('orgHtml', orgHtml, 'varsToWatch', varsToWatch);

    return function(scope, element, attrs, mapController) {
      mapController = mapController[0]||mapController[1];
      var orgAttrs = parser.orgAttributes(element);

      var filtered = parser.filter(attrs);
      var options = parser.getOptions(filtered, {scope: scope});
      var events = parser.getEvents(scope, filtered);

      /**
       * build a custom marker element
       */
      element[0].style.display = 'none';
      void 0;
      var customMarker = new CustomMarker(options);

      // Do we really need a timeout with $scope.$apply() here?
      setTimeout(function() { //apply contents, class, and location after it is compiled

        scope.$watch('[' + varsToWatch.join(',') + ']', function(newVal, oldVal) {
          customMarker.setContent(orgHtml, scope);
        }, true);

        customMarker.setContent(element[0].innerHTML, scope);
        var classNames =
          (element[0].firstElementChild) &amp;&amp; (element[0].firstElementChild.className || '');
        customMarker.class &amp;&amp; (classNames += " " + customMarker.class);
        customMarker.addClass('custom-marker');
        classNames &amp;&amp; customMarker.addClass(classNames);
        void 0;

        if (!(options.position instanceof google.maps.LatLng)) {
          NgMap.getGeoLocation(options.position).then(
            function(latlng) {
              customMarker.setPosition(latlng);
            }
          );
        }

      });

      void 0;
      for (var eventName in events) { /* jshint ignore:line */
        google.maps.event.addDomListener(
          customMarker.el, eventName, events[eventName]);
      }
      mapController.addObject('customMarkers', customMarker);

      //set observers
      mapController.observeAttrSetObj(orgAttrs, attrs, customMarker);

      element.bind('$destroy', function() {
        //Is it required to remove event listeners when DOM is removed?
        mapController.deleteObject('customMarkers', customMarker);
      });

    }; // linkFunc
  };


  var customMarkerDirective = function(
      _$timeout_, _$compile_, $interpolate, Attr2MapOptions, _NgMap_, escapeRegExp
    )  {
    parser = Attr2MapOptions;
    $timeout = _$timeout_;
    $compile = _$compile_;
    NgMap = _NgMap_;

    var exprStartSymbol = $interpolate.startSymbol();
    var exprEndSymbol = $interpolate.endSymbol();
    var exprRegExp = new RegExp(escapeRegExp(exprStartSymbol) + '([^' + exprEndSymbol.substring(0, 1) + ']+)' + escapeRegExp(exprEndSymbol), 'g');

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],
      compile: function(element) {
        void 0;
        setCustomMarker();
        element[0].style.display ='none';
        var orgHtml = element.html();
        var matches = orgHtml.match(exprRegExp);
        var varsToWatch = [];
        //filter out that contains '::', 'this.'
        (matches || []).forEach(function(match) {
          var toWatch = match.replace(exprStartSymbol,'').replace(exprEndSymbol,'');
          if (match.indexOf('::') == -1 &amp;&amp;
            match.indexOf('this.') == -1 &amp;&amp;
            varsToWatch.indexOf(toWatch) == -1) {
            varsToWatch.push(match.replace(exprStartSymbol,'').replace(exprEndSymbol,''));
          }
        });

        return linkFunc(orgHtml, varsToWatch);
      }
    }; // return
  };// function
  customMarkerDirective.$inject =
    ['$timeout', '$compile', '$interpolate', 'Attr2MapOptions', 'NgMap', 'escapeRegexpFilter'];

  angular.module('ngMap').directive('customMarker', customMarkerDirective);
})();

/**
 * @ngdoc directive
 * @name directions
 * @description
 *   Enable directions on map.
 *   e.g., origin, destination, draggable, waypoints, etc
 *
 *   Requires:  map directive
 *
 *   Restrict To:  Element
 *
 * @attr {String} DirectionsRendererOptions
 *   [Any DirectionsRendererOptions](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRendererOptions)
 * @attr {String} DirectionsRequestOptions
 *   [Any DirectionsRequest options](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRequest)
 * @example
 *  &lt;map zoom="14" center="37.7699298, -122.4469157"&gt;
 *    &lt;directions
 *      draggable="true"
 *      panel="directions-panel"
 *      travel-mode="{{travelMode}}"
 *      waypoints="[{location:'kingston', stopover:true}]"
 *      origin="{{origin}}"
 *      destination="{{destination}}"&gt;
 *    &lt;/directions&gt;
 *  &lt;/map&gt;
 */
/* global document */
(function() {
  'use strict';
  var NgMap, $timeout, NavigatorGeolocation;

  var requestTimeout, routeRequest;
  // Delay for each route render to accumulate all requests into a single one
  // This is required for simultaneous origin\waypoints\destination change
  // 20ms should be enough to merge all request data
  var routeRenderDelay = 20;

  var getDirectionsRenderer = function(options, events) {
    if (options.panel) {
      options.panel = document.getElementById(options.panel) ||
        document.querySelector(options.panel);
    }
    var renderer = new google.maps.DirectionsRenderer(options);
    for (var eventName in events) {
      google.maps.event.addListener(renderer, eventName, events[eventName]);
    }
    return renderer;
  };

  var updateRoute = function(renderer, options) {
    var directionsService = new google.maps.DirectionsService();

    /* filter out valid keys only for DirectionsRequest object*/
    var request = options;
    request.travelMode = request.travelMode || 'DRIVING';
    var validKeys = [
      'origin', 'destination', 'travelMode', 'transitOptions', 'unitSystem',
      'durationInTraffic', 'waypoints', 'optimizeWaypoints', 
      'provideRouteAlternatives', 'avoidHighways', 'avoidTolls', 'region'
    ];
    if (request) {
      for(var key in request) {
        if (request.hasOwnProperty(key)) {
          (validKeys.indexOf(key) === -1) &amp;&amp; (delete request[key]);
        }
      }
    }

    if(request.waypoints) {
      // Check for acceptable values
      if(!Array.isArray(request.waypoints)) {
        delete request.waypoints;
      }
    }

    var showDirections = function(request) {
      if (requestTimeout &amp;&amp; request) {
        if (!routeRequest) {
          routeRequest = request;
        } else {
          for (var attr in request) {
            if (request.hasOwnProperty(attr)) {
              routeRequest[attr] = request[attr];
            }
          }
        }
      } else {
        requestTimeout = $timeout(function() {
          if (!routeRequest) {
            routeRequest = request;
          }
          directionsService.route(routeRequest, function(response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
              renderer.setDirections(response);
              // Unset request for the next call
              routeRequest = undefined;
            }
          });
          $timeout.cancel(requestTimeout);
          // Unset expired timeout for the next call
          requestTimeout = undefined;
        }, routeRenderDelay);
      }
    };

    if (request &amp;&amp; request.origin &amp;&amp; request.destination) {
      if (request.origin == 'current-location') {
        NavigatorGeolocation.getCurrentPosition().then(function(ll) {
          request.origin = new google.maps.LatLng(ll.coords.latitude, ll.coords.longitude);
          showDirections(request);
        });
      } else if (request.destination == 'current-location') {
        NavigatorGeolocation.getCurrentPosition().then(function(ll) {
          request.destination = new google.maps.LatLng(ll.coords.latitude, ll.coords.longitude);
          showDirections(request);
        });
      } else {
        showDirections(request);
      }
    }
  };

  var directions = function(
      Attr2MapOptions, _$timeout_, _NavigatorGeolocation_, _NgMap_) {
    var parser = Attr2MapOptions;
    NgMap = _NgMap_;
    $timeout = _$timeout_;
    NavigatorGeolocation = _NavigatorGeolocation_;

    var linkFunc = function(scope, element, attrs, mapController) {
      mapController = mapController[0]||mapController[1];

      var orgAttrs = parser.orgAttributes(element);
      var filtered = parser.filter(attrs);
      var options = parser.getOptions(filtered, {scope: scope});
      var events = parser.getEvents(scope, filtered);
      var attrsToObserve = parser.getAttrsToObserve(orgAttrs);

      var attrsToObserve = [];
      if (!filtered.noWatcher) {
          attrsToObserve = parser.getAttrsToObserve(orgAttrs);
      }

      var renderer = getDirectionsRenderer(options, events);
      mapController.addObject('directionsRenderers', renderer);

      attrsToObserve.forEach(function(attrName) {
        (function(attrName) {
          attrs.$observe(attrName, function(val) {
            if (attrName == 'panel') {
              $timeout(function(){
                var panel =
                  document.getElementById(val) || document.querySelector(val);
                void 0;
                panel &amp;&amp; renderer.setPanel(panel);
              });
            } else if (options[attrName] !== val) { //apply only if changed
              var optionValue = parser.toOptionValue(val, {key: attrName});
              void 0;
              options[attrName] = optionValue;
              updateRoute(renderer, options);
            }
          });
        })(attrName);
      });

      NgMap.getMap().then(function() {
        updateRoute(renderer, options);
      });
      element.bind('$destroy', function() {
        mapController.deleteObject('directionsRenderers', renderer);
      });
    };

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],
      link: linkFunc
    };
  }; // var directions
  directions.$inject =
    ['Attr2MapOptions', '$timeout', 'NavigatorGeolocation', 'NgMap'];

  angular.module('ngMap').directive('directions', directions);
})();


/**
 * @ngdoc directive
 * @name drawing-manager
 * @param Attr2Options {service} convert html attribute to Google map api options
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @example
 * Example:
 *
 *  &lt;map zoom="13" center="37.774546, -122.433523" map-type-id="SATELLITE"&gt;
 *    &lt;drawing-manager
 *      on-overlaycomplete="onMapOverlayCompleted()"
 *      position="ControlPosition.TOP_CENTER"
 *      drawingModes="POLYGON,CIRCLE"
 *      drawingControl="true"
 *      circleOptions="fillColor: '#FFFF00';fillOpacity: 1;strokeWeight: 5;clickable: false;zIndex: 1;editable: true;" &gt;
 *    &lt;/drawing-manager&gt;
 *  &lt;/map&gt;
 *
 *  TODO: Add remove button.
 *  currently, for our solution, we have the shapes/markers in our own
 *  controller, and we use some css classes to change the shape button
 *  to a remove button (&lt;div&gt;X&lt;/div&gt;) and have the remove operation in our own controller.
 */
(function() {
  'use strict';
  angular.module('ngMap').directive('drawingManager', [
    'Attr2MapOptions', function(Attr2MapOptions) {
    var parser = Attr2MapOptions;

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0]||mapController[1];

        var filtered = parser.filter(attrs);
        var options = parser.getOptions(filtered, {scope: scope});
        var controlOptions = parser.getControlOptions(filtered);
        var events = parser.getEvents(scope, filtered);

        /**
         * set options
         */
        var drawingManager = new google.maps.drawing.DrawingManager({
          drawingMode: options.drawingmode,
          drawingControl: options.drawingcontrol,
          drawingControlOptions: controlOptions.drawingControlOptions,
          circleOptions:options.circleoptions,
          markerOptions:options.markeroptions,
          polygonOptions:options.polygonoptions,
          polylineOptions:options.polylineoptions,
          rectangleOptions:options.rectangleoptions
        });

        //Observers
        attrs.$observe('drawingControlOptions', function (newValue) {
          drawingManager.drawingControlOptions = parser.getControlOptions({drawingControlOptions: newValue}).drawingControlOptions;
          drawingManager.setDrawingMode(null);
          drawingManager.setMap(mapController.map);
        });


        /**
         * set events
         */
        for (var eventName in events) {
          google.maps.event.addListener(drawingManager, eventName, events[eventName]);
        }

        mapController.addObject('mapDrawingManager', drawingManager);

        element.bind('$destroy', function() {
          mapController.deleteObject('mapDrawingManager', drawingManager);
        });
      }
    }; // return
  }]);
})();

/**
 * @ngdoc directive
 * @name dynamic-maps-engine-layer
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @example
 * Example:
 *   &lt;map zoom="14" center="[59.322506, 18.010025]"&gt;
 *     &lt;dynamic-maps-engine-layer
 *       layer-id="06673056454046135537-08896501997766553811"&gt;
 *     &lt;/dynamic-maps-engine-layer&gt;
 *    &lt;/map&gt;
 */
(function() {
  'use strict';

  angular.module('ngMap').directive('dynamicMapsEngineLayer', [
    'Attr2MapOptions', function(Attr2MapOptions) {
    var parser = Attr2MapOptions;

    var getDynamicMapsEngineLayer = function(options, events) {
      var layer = new google.maps.visualization.DynamicMapsEngineLayer(options);

      for (var eventName in events) {
        google.maps.event.addListener(layer, eventName, events[eventName]);
      }

      return layer;
    };

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0]||mapController[1];

        var filtered = parser.filter(attrs);
        var options = parser.getOptions(filtered, {scope: scope});
        var events = parser.getEvents(scope, filtered, events);

        var layer = getDynamicMapsEngineLayer(options, events);
        mapController.addObject('mapsEngineLayers', layer);
      }
     }; // return
  }]);
})();

/**
 * @ngdoc directive
 * @name fusion-tables-layer
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @example
 * Example:
 *   &lt;map zoom="11" center="41.850033, -87.6500523"&gt;
 *     &lt;fusion-tables-layer query="{
 *       select: 'Geocodable address',
 *       from: '1mZ53Z70NsChnBMm-qEYmSDOvLXgrreLTkQUvvg'}"&gt;
 *     &lt;/fusion-tables-layer&gt;
 *   &lt;/map&gt;
 */
(function() {
  'use strict';

  angular.module('ngMap').directive('fusionTablesLayer', [
    'Attr2MapOptions', function(Attr2MapOptions) {
    var parser = Attr2MapOptions;

    var getLayer = function(options, events) {
      var layer = new google.maps.FusionTablesLayer(options);

      for (var eventName in events) {
        google.maps.event.addListener(layer, eventName, events[eventName]);
      }

      return layer;
    };

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0]||mapController[1];

        var filtered = parser.filter(attrs);
        var options = parser.getOptions(filtered, {scope: scope});
        var events = parser.getEvents(scope, filtered, events);
        void 0;

        var layer = getLayer(options, events);
        mapController.addObject('fusionTablesLayers', layer);
        element.bind('$destroy', function() {
          mapController.deleteObject('fusionTablesLayers', layer);
        });
      }
     }; // return
  }]);
})();

/**
 * @ngdoc directive
 * @name heatmap-layer
 * @param Attr2Options {service} convert html attribute to Google map api options
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @example
 *
 * &lt;map zoom="11" center="[41.875696,-87.624207]"&gt;
 *   &lt;heatmap-layer data="taxiData"&gt;&lt;/heatmap-layer&gt;
 * &lt;/map&gt;
 */
(function() {
  'use strict';

  angular.module('ngMap').directive('heatmapLayer', [
    'Attr2MapOptions', '$window', function(Attr2MapOptions, $window) {
    var parser = Attr2MapOptions;
    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0]||mapController[1];

        var filtered = parser.filter(attrs);

        /**
         * set options
         */
        var options = parser.getOptions(filtered, {scope: scope});
        options.data = $window[attrs.data] || parseScope(attrs.data, scope);
        if (options.data instanceof Array) {
          options.data = new google.maps.MVCArray(options.data);
        } else {
          throw "invalid heatmap data";
        }
        var layer = new google.maps.visualization.HeatmapLayer(options);

        /**
         * set events
         */
        var events = parser.getEvents(scope, filtered);
        void 0;

        mapController.addObject('heatmapLayers', layer);
        
        //helper get nexted path
        function parseScope( path, obj ) {
            return path.split('.').reduce( function( prev, curr ) {
                return prev[curr];
            }, obj || this );
        }
      }
     }; // return
  }]);
})();

/**
 * @ngdoc directive
 * @name info-window
 * @param Attr2MapOptions {service}
 *   convert html attribute to Google map api options
 * @param $compile {service} $compile service
 * @description
 *  Defines infoWindow and provides compile method
 *
 *  Requires:  map directive
 *
 *  Restrict To:  Element
 *
 *  NOTE: this directive should **NOT** be used with `ng-repeat`
 *  because InfoWindow itself is a template, and a template must be
 *  reused by each marker, thus, should not be redefined repeatedly
 *  by `ng-repeat`.
 *
 * @attr {Boolean} visible
 *   Indicates to show it when map is initialized
 * @attr {Boolean} visible-on-marker
 *   Indicates to show it on a marker when map is initialized
 * @attr {Expression} geo-callback
 *   if position is an address, the expression is will be performed
 *   when geo-lookup is successful. e.g., geo-callback="showDetail()"
 * @attr {String} &amp;lt;InfoWindowOption&gt; Any InfoWindow options,
 *   https://developers.google.com/maps/documentation/javascript/reference?csw=1#InfoWindowOptions
 * @attr {String} &amp;lt;InfoWindowEvent&gt; Any InfoWindow events,
 *   https://developers.google.com/maps/documentation/javascript/reference
 * @example
 * Usage:
 *   &lt;map MAP_ATTRIBUTES&gt;
 *    &lt;info-window id="foo" ANY_OPTIONS ANY_EVENTS"&gt;&lt;/info-window&gt;
 *   &lt;/map&gt;
 *
 * Example:
 *  &lt;map center="41.850033,-87.6500523" zoom="3"&gt;
 *    &lt;info-window id="1" position="41.850033,-87.6500523" &gt;
 *      &lt;div ng-non-bindable&gt;
 *        Chicago, IL&lt;br/&gt;
 *        LatLng: {{chicago.lat()}}, {{chicago.lng()}}, &lt;br/&gt;
 *        World Coordinate: {{worldCoordinate.x}}, {{worldCoordinate.y}}, &lt;br/&gt;
 *        Pixel Coordinate: {{pixelCoordinate.x}}, {{pixelCoordinate.y}}, &lt;br/&gt;
 *        Tile Coordinate: {{tileCoordinate.x}}, {{tileCoordinate.y}} at Zoom Level {{map.getZoom()}}
 *      &lt;/div&gt;
 *    &lt;/info-window&gt;
 *  &lt;/map&gt;
 */
/* global google */
(function() {
  'use strict';

  var infoWindow = function(Attr2MapOptions, $compile, $q, $templateRequest, $timeout, $parse, NgMap)  {
    var parser = Attr2MapOptions;

    var getInfoWindow = function(options, events, element) {
      var infoWindow;

      /**
       * set options
       */
      if (options.position &amp;&amp; !(options.position instanceof google.maps.LatLng)) {
        delete options.position;
      }
      infoWindow = new google.maps.InfoWindow(options);

      /**
       * set events
       */
      for (var eventName in events) {
        if (eventName) {
          google.maps.event.addListener(infoWindow, eventName, events[eventName]);
        }
      }

      /**
       * set template and template-related functions
       * it must have a container element with ng-non-bindable
       */
      var templatePromise = $q(function(resolve) {
        if (angular.isString(element)) {
          $templateRequest(element).then(function (requestedTemplate) {
            resolve(angular.element(requestedTemplate).wrap('&lt;div&gt;').parent());
          }, function(message) {
            throw "info-window template request failed: " + message;
          });
        }
        else {
          resolve(element);
        }
      }).then(function(resolvedTemplate) {
        var template = resolvedTemplate.html().trim();
        if (angular.element(template).length != 1) {
          throw "info-window working as a template must have a container";
        }
        infoWindow.__template = template.replace(/\s?ng-non-bindable[='"]+/,"");
      });

      infoWindow.__open = function(map, scope, anchor) {
        templatePromise.then(function() {
          $timeout(function() {
            anchor &amp;&amp; (scope.anchor = anchor);
            var el = $compile(infoWindow.__template)(scope);
            infoWindow.setContent(el[0]);
            scope.$apply();
            if (anchor &amp;&amp; anchor.getPosition) {
              infoWindow.open(map, anchor);
            } else if (anchor &amp;&amp; anchor instanceof google.maps.LatLng) {
              infoWindow.open(map);
              infoWindow.setPosition(anchor);
            } else {
              infoWindow.open(map);
            }
            var infoWindowContainerEl = infoWindow.content.parentElement.parentElement.parentElement;
            infoWindowContainerEl.className = "ng-map-info-window";
          });
        });
      };

      return infoWindow;
    };

    var linkFunc = function(scope, element, attrs, mapController) {
      mapController = mapController[0]||mapController[1];

      element.css('display','none');

      var orgAttrs = parser.orgAttributes(element);
      var filtered = parser.filter(attrs);
      var options = parser.getOptions(filtered, {scope: scope});
      var events = parser.getEvents(scope, filtered);

      var infoWindow = getInfoWindow(options, events, options.template || element);
      var address;
      if (options.position &amp;&amp; !(options.position instanceof google.maps.LatLng)) {
        address = options.position;
      }
      if (address) {
        NgMap.getGeoLocation(address).then(function(latlng) {
          infoWindow.setPosition(latlng);
          infoWindow.__open(mapController.map, scope, latlng);
          var geoCallback = attrs.geoCallback;
          geoCallback &amp;&amp; $parse(geoCallback)(scope);
        });
      }

      mapController.addObject('infoWindows', infoWindow);
      mapController.observeAttrSetObj(orgAttrs, attrs, infoWindow);

      mapController.showInfoWindow =
      mapController.map.showInfoWindow = mapController.showInfoWindow ||
        function(p1, p2, p3) { //event, id, marker
          var id = typeof p1 == 'string' ? p1 : p2;
          var marker = typeof p1 == 'string' ? p2 : p3;
          if (typeof marker == 'string') {
            //Check if markers if defined to avoid odd 'undefined' errors
            if (
              typeof mapController.map.markers != "undefined"
              &amp;&amp; typeof mapController.map.markers[marker] != "undefined") {
                marker = mapController.map.markers[marker];
            } else if (
              //additionally check if that marker is a custom marker
              typeof mapController.map.customMarkers !== "undefined"
              &amp;&amp; typeof mapController.map.customMarkers[marker] !== "undefined") {
                marker = mapController.map.customMarkers[marker];
            } else {
              //Better error output if marker with that id is not defined
              throw new Error("Cant open info window for id " + marker + ". Marker or CustomMarker is not defined")
            }
          }

          var infoWindow = mapController.map.infoWindows[id];
          var anchor = marker ? marker : (this.getPosition ? this : null);
          infoWindow.__open(mapController.map, scope, anchor);
          if(mapController.singleInfoWindow) {
            if(mapController.lastInfoWindow) {
              scope.hideInfoWindow(mapController.lastInfoWindow);
            }
            mapController.lastInfoWindow = id;
          }
        };

      mapController.hideInfoWindow =
      mapController.map.hideInfoWindow = mapController.hideInfoWindow ||
        function(p1, p2) {
          var id = typeof p1 == 'string' ? p1 : p2;
          var infoWindow = mapController.map.infoWindows[id];
          infoWindow.close();
        };

      //TODO DEPRECATED
      scope.showInfoWindow = mapController.map.showInfoWindow;
      scope.hideInfoWindow = mapController.map.hideInfoWindow;

      var map = infoWindow.mapId ? {id:infoWindow.mapId} : 0;
      NgMap.getMap(map).then(function(map) {
        infoWindow.visible &amp;&amp; infoWindow.__open(map, scope);
        if (infoWindow.visibleOnMarker) {
          var markerId = infoWindow.visibleOnMarker;
          infoWindow.__open(map, scope, map.markers[markerId]);
        }
      });

    }; //link

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],
      link: linkFunc
    };

  }; // infoWindow
  infoWindow.$inject =
    ['Attr2MapOptions', '$compile', '$q', '$templateRequest', '$timeout', '$parse', 'NgMap'];

  angular.module('ngMap').directive('infoWindow', infoWindow);
})();

/**
 * @ngdoc directive
 * @name kml-layer
 * @param Attr2MapOptions {service} convert html attribute to Google map api options
 * @description
 *   renders Kml layer on a map
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @attr {Url} url url of the kml layer
 * @attr {KmlLayerOptions} KmlLayerOptions
 *   (https://developers.google.com/maps/documentation/javascript/reference#KmlLayerOptions) 
 * @attr {String} &amp;lt;KmlLayerEvent&gt; Any KmlLayer events,
 *   https://developers.google.com/maps/documentation/javascript/reference
 * @example
 * Usage:
 *   &lt;map MAP_ATTRIBUTES&gt;
 *    &lt;kml-layer ANY_KML_LAYER ANY_KML_LAYER_EVENTS"&gt;&lt;/kml-layer&gt;
 *   &lt;/map&gt;
 *
 * Example:
 *
 * &lt;map zoom="11" center="[41.875696,-87.624207]"&gt;
 *   &lt;kml-layer url="https://gmaps-samples.googlecode.com/svn/trunk/ggeoxml/cta.kml" &gt;
 *   &lt;/kml-layer&gt;
 * &lt;/map&gt;
 */
(function() {
  'use strict';

  angular.module('ngMap').directive('kmlLayer', [
    'Attr2MapOptions', function(Attr2MapOptions) {
    var parser = Attr2MapOptions;

    var getKmlLayer = function(options, events) {
      var kmlLayer = new google.maps.KmlLayer(options);
      for (var eventName in events) {
        google.maps.event.addListener(kmlLayer, eventName, events[eventName]);
      }
      return kmlLayer;
    };

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0]||mapController[1];

        var orgAttrs = parser.orgAttributes(element);
        var filtered = parser.filter(attrs);
        var options = parser.getOptions(filtered, {scope: scope});
        var events = parser.getEvents(scope, filtered);
        void 0;

        var kmlLayer = getKmlLayer(options, events);
        mapController.addObject('kmlLayers', kmlLayer);
        mapController.observeAttrSetObj(orgAttrs, attrs, kmlLayer);  //observers
        element.bind('$destroy', function() {
          mapController.deleteObject('kmlLayers', kmlLayer);
        });
      }
     }; // return
  }]);
})();

/**
 * @ngdoc directive
 * @name map-data
 * @param Attr2MapOptions {service}
 *   convert html attribute to Google map api options
 * @description
 *   set map data
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @wn {String} method-name, run map.data[method-name] with attribute value
 * @example
 * Example:
 *
 *  &lt;map zoom="11" center="[41.875696,-87.624207]"&gt;
 *    &lt;map-data load-geo-json="https://storage.googleapis.com/maps-devrel/google.json"&gt;&lt;/map-data&gt;
 *   &lt;/map&gt;
 */
(function() {
  'use strict';

  angular.module('ngMap').directive('mapData', [
    'Attr2MapOptions', 'NgMap', function(Attr2MapOptions, NgMap) {
    var parser = Attr2MapOptions;
    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0] || mapController[1];
        var filtered = parser.filter(attrs);
        var options = parser.getOptions(filtered, {scope: scope});
        var events = parser.getEvents(scope, filtered, events);

        void 0;
        NgMap.getMap(mapController.map.id).then(function(map) {
          //options
          for (var key in options) {
            var val = options[key];
            if (typeof scope[val] === "function") {
              map.data[key](scope[val]);
            } else {
              map.data[key](val);
            }
          }

          //events
          for (var eventName in events) {
            map.data.addListener(eventName, events[eventName]);
          }
        });
      }
     }; // return
  }]);
})();

/**
 * @ngdoc directive
 * @name map-lazy-load
 * @param Attr2Options {service} convert html attribute to Google map api options
 * @description
 *  Requires: Delay the initialization of map directive
 *    until the map is ready to be rendered
 *  Restrict To: Attribute
 *
 * @attr {String} map-lazy-load
 *    Maps api script source file location.
 *    Example:
 *      'https://maps.google.com/maps/api/js'
 * @attr {String} map-lazy-load-params
 *   Maps api script source file location via angular scope variable.
 *   Also requires the map-lazy-load attribute to be present in the directive.
 *   Example: In your controller, set
 *     $scope.googleMapsURL = 'https://maps.google.com/maps/api/js?v=3.20&amp;client=XXXXXenter-api-key-hereXXXX'
 *
 * @example
 * Example:
 *
 *   &lt;div map-lazy-load="http://maps.google.com/maps/api/js"&gt;
 *     &lt;map center="Brampton" zoom="10"&gt;
 *       &lt;marker position="Brampton"&gt;&lt;/marker&gt;
 *     &lt;/map&gt;
 *   &lt;/div&gt;
 *
 *   &lt;div map-lazy-load="http://maps.google.com/maps/api/js"
 *        map-lazy-load-params="{{googleMapsUrl}}"&gt;
 *     &lt;map center="Brampton" zoom="10"&gt;
 *       &lt;marker position="Brampton"&gt;&lt;/marker&gt;
 *     &lt;/map&gt;
 *   &lt;/div&gt;
 */
/* global window, document */
(function() {
  'use strict';
  var $timeout, $compile, src, savedHtml = [], elements = [];

  var preLinkFunc = function(scope, element, attrs) {
    var mapsUrl = attrs.mapLazyLoadParams || attrs.mapLazyLoad;

    if(window.google === undefined || window.google.maps === undefined) {
      elements.push({
        scope: scope,
        element: element,
        savedHtml: savedHtml[elements.length],
      });

      window.lazyLoadCallback = function() {
        void 0;
        $timeout(function() { /* give some time to load */
          elements.forEach(function(elm) {
              elm.element.html(elm.savedHtml);
              $compile(elm.element.contents())(elm.scope);
          });
        }, 100);
      };

      var scriptEl = document.createElement('script');
      void 0;

      scriptEl.src = mapsUrl +
        (mapsUrl.indexOf('?') &gt; -1 ? '&amp;' : '?') +
        'callback=lazyLoadCallback';

        if (!document.querySelector('script[src="' + scriptEl.src + '"]')) {
          document.body.appendChild(scriptEl);
        }
    } else {
      element.html(savedHtml);
      $compile(element.contents())(scope);
    }
  };

  var compileFunc = function(tElement, tAttrs) {

    (!tAttrs.mapLazyLoad) &amp;&amp; void 0;
    savedHtml.push(tElement.html());
    src = tAttrs.mapLazyLoad;

    /**
     * if already loaded, stop processing it
     */
    if(window.google !== undefined &amp;&amp; window.google.maps !== undefined) {
      return false;
    }

    tElement.html('');  // will compile again after script is loaded

    return {
      pre: preLinkFunc
    };
  };

  var mapLazyLoad = function(_$compile_, _$timeout_) {
    $compile = _$compile_, $timeout = _$timeout_;
    return {
      compile: compileFunc
    };
  };
  mapLazyLoad.$inject = ['$compile','$timeout'];

  angular.module('ngMap').directive('mapLazyLoad', mapLazyLoad);
})();

/**
 * @ngdoc directive
 * @name map-type
 * @param Attr2MapOptions {service} 
 *   convert html attribute to Google map api options
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @example
 * Example:
 *
 *   &lt;map zoom="13" center="34.04924594193164, -118.24104309082031"&gt;
 *     &lt;map-type name="coordinate" object="coordinateMapType"&gt;&lt;/map-type&gt;
 *   &lt;/map&gt;
 */
(function() {
  'use strict';

  angular.module('ngMap').directive('mapType', ['$parse', 'NgMap',
    function($parse, NgMap) {

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0]||mapController[1];

        var mapTypeName = attrs.name, mapTypeObject;
        if (!mapTypeName) {
          throw "invalid map-type name";
        }
        mapTypeObject = $parse(attrs.object)(scope);
        if (!mapTypeObject) {
          throw "invalid map-type object";
        }

        NgMap.getMap().then(function(map) {
          map.mapTypes.set(mapTypeName, mapTypeObject);
        });
        mapController.addObject('mapTypes', mapTypeObject);
      }
     }; // return
  }]);
})();

/**
 * @ngdoc directive
 * @memberof ngMap
 * @name ng-map
 * @param Attr2Options {service}
 *  convert html attribute to Google map api options
 * @description
 * Implementation of {@link __MapController}
 * Initialize a Google map within a `&lt;div&gt;` tag
 *   with given options and register events
 *
 * @attr {Expression} map-initialized
 *   callback function when map is initialized
 *   e.g., map-initialized="mycallback(map)"
 * @attr {Expression} geo-callback if center is an address or current location,
 *   the expression is will be executed when geo-lookup is successful.
 *   e.g., geo-callback="showMyStoreInfo()"
 * @attr {Array} geo-fallback-center
 *   The center of map incase geolocation failed. i.e. [0,0]
 * @attr {Object} geo-location-options
 *  The navigator geolocation options.
 *  e.g., { maximumAge: 3000, timeout: 5000, enableHighAccuracy: true }.
 *  If none specified, { timeout: 5000 }.
 *  If timeout not specified, timeout: 5000 added
 * @attr {Boolean} zoom-to-include-markers
 *  When true, map boundary will be changed automatially
 *  to include all markers when initialized
 * @attr {Boolean} default-style
 *  When false, the default styling,
 *  `display:block;height:300px`, will be ignored.
 * @attr {String} &amp;lt;MapOption&gt; Any Google map options,
 *  https://developers.google.com/maps/documentation/javascript/reference?csw=1#MapOptions
 * @attr {String} &amp;lt;MapEvent&gt; Any Google map events,
 *  https://rawgit.com/allenhwkim/angularjs-google-maps/master/build/map_events.html
 * @attr {Boolean} single-info-window
 *  When true the map will only display one info window at the time,
 *  if not set or false,
 *  everytime an info window is open it will be displayed with the othe one.
 * @attr {Boolean} trigger-resize
 *  Default to false.  Set to true to trigger resize of the map.  Needs to be done anytime you resize the map
 * @example
 * Usage:
 *   &lt;map MAP_OPTIONS_OR_MAP_EVENTS ..&gt;
 *     ... Any children directives
 *   &lt;/map&gt;
 *
 * Example:
 *   &lt;map center="[40.74, -74.18]" on-click="doThat()"&gt;
 *   &lt;/map&gt;
 *
 *   &lt;map geo-fallback-center="[40.74, -74.18]" zoom-to-inlude-markers="true"&gt;
 *   &lt;/map&gt;
 */
(function () {
  'use strict';

  var mapDirective = function () {
    return {
      restrict: 'AE',
      controller: '__MapController',
      controllerAs: 'ngmap'
    };
  };

  angular.module('ngMap').directive('map', [mapDirective]);
  angular.module('ngMap').directive('ngMap', [mapDirective]);
})();

/**
 * @ngdoc directive
 * @name maps-engine-layer
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @example
 * Example:
 *  &lt;map zoom="14" center="[59.322506, 18.010025]"&gt;
 *    &lt;maps-engine-layer layer-id="06673056454046135537-08896501997766553811"&gt;
 *    &lt;/maps-engine-layer&gt;
 *  &lt;/map&gt;
 */
(function() {
  'use strict';

  angular.module('ngMap').directive('mapsEngineLayer', ['Attr2MapOptions', function(Attr2MapOptions) {
    var parser = Attr2MapOptions;

    var getMapsEngineLayer = function(options, events) {
      var layer = new google.maps.visualization.MapsEngineLayer(options);

      for (var eventName in events) {
        google.maps.event.addListener(layer, eventName, events[eventName]);
      }

      return layer;
    };

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0]||mapController[1];

        var filtered = parser.filter(attrs);
        var options = parser.getOptions(filtered, {scope: scope});
        var events = parser.getEvents(scope, filtered, events);
        void 0;

        var layer = getMapsEngineLayer(options, events);
        mapController.addObject('mapsEngineLayers', layer);
      }
     }; // return
  }]);
})();

/**
 * @ngdoc directive
 * @name marker
 * @param Attr2Options {service} convert html attribute to Google map api options
 * @param NavigatorGeolocation It is used to find the current location
 * @description
 *  Draw a Google map marker on a map with given options and register events
 *
 *  Requires:  map directive
 *
 *  Restrict To:  Element
 *
 * @attr {String} position address, 'current', or [latitude, longitude]
 *  example:
 *    '1600 Pennsylvania Ave, 20500  Washingtion DC',
 *    'current position',
 *    '[40.74, -74.18]'
 * @attr {Boolean} centered if set, map will be centered with this marker
 * @attr {Expression} geo-callback if position is an address,
 *   the expression is will be performed when geo-lookup is successful.
 *   e.g., geo-callback="showStoreInfo()"
 * @attr {Boolean} no-watcher if true, no attribute observer is added.
 *   Useful for many ng-repeat
 * @attr {String} &amp;lt;MarkerOption&gt;
 *   [Any Marker options](https://developers.google.com/maps/documentation/javascript/reference?csw=1#MarkerOptions)
 * @attr {String} &amp;lt;MapEvent&gt;
 *   [Any Marker events](https://developers.google.com/maps/documentation/javascript/reference)
 * @example
 * Usage:
 *   &lt;map MAP_ATTRIBUTES&gt;
 *    &lt;marker ANY_MARKER_OPTIONS ANY_MARKER_EVENTS"&gt;&lt;/MARKER&gt;
 *   &lt;/map&gt;
 *
 * Example:
 *   &lt;map center="[40.74, -74.18]"&gt;
 *    &lt;marker position="[40.74, -74.18]" on-click="myfunc()"&gt;&lt;/div&gt;
 *   &lt;/map&gt;
 *
 *   &lt;map center="the cn tower"&gt;
 *    &lt;marker position="the cn tower" on-click="myfunc()"&gt;&lt;/div&gt;
 *   &lt;/map&gt;
 */
/* global google */
(function() {
  'use strict';
  var parser, $parse, NgMap;

  var getMarker = function(options, events) {
    var marker;

    if (NgMap.defaultOptions.marker) {
      for (var key in NgMap.defaultOptions.marker) {
        if (typeof options[key] == 'undefined') {
          void 0;
          options[key] = NgMap.defaultOptions.marker[key];
        }
      }
    }

    if (!(options.position instanceof google.maps.LatLng)) {
      options.position = new google.maps.LatLng(0,0);
    }
    marker = new google.maps.Marker(options);

    /**
     * set events
     */
    if (Object.keys(events).length &gt; 0) {
      void 0;
    }
    for (var eventName in events) {
      if (eventName) {
        google.maps.event.addListener(marker, eventName, events[eventName]);
      }
    }

    return marker;
  };

  var linkFunc = function(scope, element, attrs, mapController) {
    mapController = mapController[0]||mapController[1];

    var orgAttrs = parser.orgAttributes(element);
    var filtered = parser.filter(attrs);
    var markerOptions = parser.getOptions(filtered, scope, {scope: scope});
    var markerEvents = parser.getEvents(scope, filtered);
    void 0;

    var address;
    if (!(markerOptions.position instanceof google.maps.LatLng)) {
      address = markerOptions.position;
    }
    var marker = getMarker(markerOptions, markerEvents);
    mapController.addObject('markers', marker);
    if (address) {
      NgMap.getGeoLocation(address).then(function(latlng) {
        marker.setPosition(latlng);
        markerOptions.centered &amp;&amp; marker.map.setCenter(latlng);
        var geoCallback = attrs.geoCallback;
        geoCallback &amp;&amp; $parse(geoCallback)(scope);
      });
    }

    //set observers
    mapController.observeAttrSetObj(orgAttrs, attrs, marker); /* observers */

    element.bind('$destroy', function() {
      mapController.deleteObject('markers', marker);
    });
  };

  var marker = function(Attr2MapOptions, _$parse_, _NgMap_) {
    parser = Attr2MapOptions;
    $parse = _$parse_;
    NgMap = _NgMap_;

    return {
      restrict: 'E',
      require: ['^?map','?^ngMap'],
      link: linkFunc
    };
  };

  marker.$inject = ['Attr2MapOptions', '$parse', 'NgMap'];
  angular.module('ngMap').directive('marker', marker);

})();

/**
 * @ngdoc directive
 * @name overlay-map-type
 * @param Attr2MapOptions {service} convert html attribute to Google map api options
 * @param $window {service}
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @example
 * Example:
 *
 * &lt;map zoom="13" center="34.04924594193164, -118.24104309082031"&gt;
 *   &lt;overlay-map-type index="0" object="coordinateMapType"&gt;&lt;/map-type&gt;
 * &lt;/map&gt;
 */
(function() {
  'use strict';

  angular.module('ngMap').directive('overlayMapType', [
    'NgMap', function(NgMap) {

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0]||mapController[1];

        var initMethod = attrs.initMethod || "insertAt";
        var overlayMapTypeObject = scope[attrs.object];

        NgMap.getMap().then(function(map) {
          if (initMethod == "insertAt") {
            var index = parseInt(attrs.index, 10);
            map.overlayMapTypes.insertAt(index, overlayMapTypeObject);
          } else if (initMethod == "push") {
            map.overlayMapTypes.push(overlayMapTypeObject);
          }
        });
        mapController.addObject('overlayMapTypes', overlayMapTypeObject);
      }
     }; // return
  }]);
})();

/**
 * @ngdoc directive
 * @name places-auto-complete
 * @param Attr2MapOptions {service} convert html attribute to Google map api options
 * @description
 *   Provides address auto complete feature to an input element
 *   Requires: input tag
 *   Restrict To: Attribute
 *
 * @attr {AutoCompleteOptions}
 *   [Any AutocompleteOptions](https://developers.google.com/maps/documentation/javascript/3.exp/reference#AutocompleteOptions)
 *
 * @example
 * Example:
 *   &lt;script src="https://maps.googleapis.com/maps/api/js?libraries=places"&gt;&lt;/script&gt;
 *   &lt;input places-auto-complete types="['geocode']" on-place-changed="myCallback(place)" component-restrictions="{country:'au'}"/&gt;
 *
 */
/* global google */
(function() {
  'use strict';

  var placesAutoComplete = function(Attr2MapOptions, $timeout) {
    var parser = Attr2MapOptions;

    var linkFunc = function(scope, element, attrs, ngModelCtrl) {
      if (attrs.placesAutoComplete ==='false') {
        return false;
      }
      var filtered = parser.filter(attrs);
      var options = parser.getOptions(filtered, {scope: scope});
      var events = parser.getEvents(scope, filtered);
      var autocomplete = new google.maps.places.Autocomplete(element[0], options);
      autocomplete.setOptions({strictBounds: options.strictBounds === true});
      for (var eventName in events) {
        google.maps.event.addListener(autocomplete, eventName, events[eventName]);
      }

      var updateModel = function() {
        $timeout(function(){
          ngModelCtrl &amp;&amp; ngModelCtrl.$setViewValue(element.val());
        },100);
      };
      google.maps.event.addListener(autocomplete, 'place_changed', updateModel);
      element[0].addEventListener('change', updateModel);

      attrs.$observe('rectBounds', function(val) {
        if (val) {
          var bounds = parser.toOptionValue(val, {key: 'rectBounds'});
          autocomplete.setBounds(new google.maps.LatLngBounds(
            new google.maps.LatLng(bounds.south_west.lat, bounds.south_west.lng),
            new google.maps.LatLng(bounds.north_east.lat, bounds.north_east.lng)));
          }
      });

      attrs.$observe('circleBounds', function(val) {
        if (val) {
          var bounds = parser.toOptionValue(val, {key: 'circleBounds'});
          var circle = new google.maps.Circle(bounds);
          autocomplete.setBounds(circle.getBounds());
        }
      });

      attrs.$observe('types', function(val) {
        if (val) {
          var optionValue = parser.toOptionValue(val, {key: 'types'});
          autocomplete.setTypes(optionValue);
        }
      });

      attrs.$observe('componentRestrictions', function (val) {
        if (val) {
          autocomplete.setComponentRestrictions(scope.$eval(val));
        }
      });
    };

    return {
      restrict: 'A',
      require: '?ngModel',
      link: linkFunc
    };
  };

  placesAutoComplete.$inject = ['Attr2MapOptions', '$timeout'];
  angular.module('ngMap').directive('placesAutoComplete', placesAutoComplete);
})();

/**
 * @ngdoc directive
 * @name shape
 * @param Attr2MapOptions {service} convert html attribute to Google map api options
 * @description
 *   Initialize a Google map shape in map with given options and register events
 *   The shapes are:
 *     . circle
 *     . polygon
 *     . polyline
 *     . rectangle
 *     . groundOverlay(or image)
 *
 *   Requires:  map directive
 *
 *   Restrict To:  Element
 *
 * @attr {Boolean} centered if set, map will be centered with this marker
 * @attr {Expression} geo-callback if shape is a circle and the center is
 *   an address, the expression is will be performed when geo-lookup
 *   is successful. e.g., geo-callback="showDetail()"
 * @attr {String} &amp;lt;OPTIONS&gt;
 *   For circle, [any circle options](https://developers.google.com/maps/documentation/javascript/reference#CircleOptions)
 *   For polygon, [any polygon options](https://developers.google.com/maps/documentation/javascript/reference#PolygonOptions)
 *   For polyline, [any polyline options](https://developers.google.com/maps/documentation/javascript/reference#PolylineOptions)
 *   For rectangle, [any rectangle options](https://developers.google.com/maps/documentation/javascript/reference#RectangleOptions)
 *   For image, [any groundOverlay options](https://developers.google.com/maps/documentation/javascript/reference#GroundOverlayOptions)
 * @attr {String} &amp;lt;MapEvent&gt; [Any Shape events](https://developers.google.com/maps/documentation/javascript/reference)
 * @example
 * Usage:
 *   &lt;map MAP_ATTRIBUTES&gt;
 *    &lt;shape name="SHAPE_NAME ANY_SHAPE_OPTIONS ANY_SHAPE_EVENTS"&gt;&lt;/shape&gt;
 *   &lt;/map&gt;
 *
 * Example:
 *
 *   &lt;map zoom="11" center="[40.74, -74.18]"&gt;
 *     &lt;shape id="polyline" name="polyline" geodesic="true"
 *       stroke-color="#FF0000" stroke-opacity="1.0" stroke-weight="2"
 *       path="[[40.74,-74.18],[40.64,-74.10],[40.54,-74.05],[40.44,-74]]" &gt;
 *     &lt;/shape&gt;
 *   &lt;/map&gt;
 *
 *   &lt;map zoom="11" center="[40.74, -74.18]"&gt;
 *     &lt;shape id="polygon" name="polygon" stroke-color="#FF0000"
 *       stroke-opacity="1.0" stroke-weight="2"
 *       paths="[[40.74,-74.18],[40.64,-74.18],[40.84,-74.08],[40.74,-74.18]]" &gt;
 *     &lt;/shape&gt;
 *   &lt;/map&gt;
 *
 *   &lt;map zoom="11" center="[40.74, -74.18]"&gt;
 *     &lt;shape id="rectangle" name="rectangle" stroke-color='#FF0000'
 *       stroke-opacity="0.8" stroke-weight="2"
 *       bounds="[[40.74,-74.18], [40.78,-74.14]]" editable="true" &gt;
 *     &lt;/shape&gt;
 *   &lt;/map&gt;
 *
 *   &lt;map zoom="11" center="[40.74, -74.18]"&gt;
 *     &lt;shape id="circle" name="circle" stroke-color='#FF0000'
 *       stroke-opacity="0.8"stroke-weight="2"
 *       center="[40.70,-74.14]" radius="4000" editable="true" &gt;
 *     &lt;/shape&gt;
 *   &lt;/map&gt;
 *
 *   &lt;map zoom="11" center="[40.74, -74.18]"&gt;
 *     &lt;shape id="image" name="image"
 *       url="https://www.lib.utexas.edu/maps/historical/newark_nj_1922.jpg"
 *       bounds="[[40.71,-74.22],[40.77,-74.12]]" opacity="0.7"
 *       clickable="true"&gt;
 *     &lt;/shape&gt;
 *   &lt;/map&gt;
 *
 *  For full-working example, please visit
 *    [shape example](https://rawgit.com/allenhwkim/angularjs-google-maps/master/build/shape.html)
 */
/* global google */
(function() {
  'use strict';

  var getShape = function(options, events) {
    var shape;

    var shapeName = options.name;
    delete options.name;  //remove name bcoz it's not for options
    void 0;

    /**
     * set options
     */
    switch(shapeName) {
      case "circle":
        if (!(options.center instanceof google.maps.LatLng)) {
          options.center = new google.maps.LatLng(0,0);
        } 
        shape = new google.maps.Circle(options);
        break;
      case "polygon":
        shape = new google.maps.Polygon(options);
        break;
      case "polyline":
        shape = new google.maps.Polyline(options);
        break;
      case "rectangle":
        shape = new google.maps.Rectangle(options);
        break;
      case "groundOverlay":
      case "image":
        var url = options.url;
        var opts = {opacity: options.opacity, clickable: options.clickable, id:options.id};
        shape = new google.maps.GroundOverlay(url, options.bounds, opts);
        break;
    }

    /**
     * set events
     */
    for (var eventName in events) {
      if (events[eventName]) {
        google.maps.event.addListener(shape, eventName, events[eventName]);
      }
    }
    return shape;
  };

  var shape = function(Attr2MapOptions, $parse, NgMap) {
    var parser = Attr2MapOptions;

    var linkFunc = function(scope, element, attrs, mapController) {
      mapController = mapController[0]||mapController[1];

      var orgAttrs = parser.orgAttributes(element);
      var filtered = parser.filter(attrs);
      var shapeOptions = parser.getOptions(filtered, {scope: scope});
      var shapeEvents = parser.getEvents(scope, filtered);

      var address, shapeType;
      shapeType = shapeOptions.name;
      if (!(shapeOptions.center instanceof google.maps.LatLng)) {
        address = shapeOptions.center;
      }
      var shape = getShape(shapeOptions, shapeEvents);
      mapController.addObject('shapes', shape);

      if (address &amp;&amp; shapeType == 'circle') {
        NgMap.getGeoLocation(address).then(function(latlng) {
          shape.setCenter(latlng);
          shape.centered &amp;&amp; shape.map.setCenter(latlng);
          var geoCallback = attrs.geoCallback;
          geoCallback &amp;&amp; $parse(geoCallback)(scope);
        });
      }

      //set observers
      mapController.observeAttrSetObj(orgAttrs, attrs, shape);
      element.bind('$destroy', function() {
        mapController.deleteObject('shapes', shape);
      });
    };

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],
      link: linkFunc
     }; // return
  };
  shape.$inject = ['Attr2MapOptions', '$parse', 'NgMap'];

  angular.module('ngMap').directive('shape', shape);

})();

/**
 * @ngdoc directive
 * @name streetview-panorama
 * @param Attr2MapOptions {service} convert html attribute to Google map api options
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @attr container Optional, id or css selector, if given, streetview will be in the given html element
 * @attr {String} &amp;lt;StreetViewPanoramaOption&gt;
 *   [Any Google StreetViewPanorama options](https://developers.google.com/maps/documentation/javascript/reference?csw=1#StreetViewPanoramaOptions)
 * @attr {String} &amp;lt;StreetViewPanoramaEvent&gt;
 *   [Any Google StreetViewPanorama events](https://developers.google.com/maps/documentation/javascript/reference#StreetViewPanorama)
 *
 * @example
 *   &lt;map zoom="11" center="[40.688738,-74.043871]" &gt;
 *     &lt;street-view-panorama
 *       click-to-go="true"
 *       disable-default-ui="true"
 *       disable-double-click-zoom="true"
 *       enable-close-button="true"
 *       pano="my-pano"
 *       position="40.688738,-74.043871"
 *       pov="{heading:0, pitch: 90}"
 *       scrollwheel="false"
 *       visible="true"&gt;
 *     &lt;/street-view-panorama&gt;
 *   &lt;/map&gt;
 */
/* global google, document */
(function() {
  'use strict';

  var streetViewPanorama = function(Attr2MapOptions, NgMap) {
    var parser = Attr2MapOptions;

    var getStreetViewPanorama = function(map, options, events) {
      var svp, container;
      if (options.container) {
        container = document.getElementById(options.container);
        container = container || document.querySelector(options.container);
      }
      if (container) {
        svp = new google.maps.StreetViewPanorama(container, options);
      } else {
        svp = map.getStreetView();
        svp.setOptions(options);
      }

      for (var eventName in events) {
        eventName &amp;&amp;
          google.maps.event.addListener(svp, eventName, events[eventName]);
      }
      return svp;
    };

    var linkFunc = function(scope, element, attrs) {
      var filtered = parser.filter(attrs);
      var options = parser.getOptions(filtered, {scope: scope});
      var controlOptions = parser.getControlOptions(filtered);
      var svpOptions = angular.extend(options, controlOptions);

      var svpEvents = parser.getEvents(scope, filtered);
      void 0;

      NgMap.getMap().then(function(map) {
        var svp = getStreetViewPanorama(map, svpOptions, svpEvents);

        map.setStreetView(svp);
        (!svp.getPosition()) &amp;&amp; svp.setPosition(map.getCenter());
        google.maps.event.addListener(svp, 'position_changed', function() {
          if (svp.getPosition() !== map.getCenter()) {
            map.setCenter(svp.getPosition());
          }
        });
        //needed for geo-callback
        var listener =
          google.maps.event.addListener(map, 'center_changed', function() {
            svp.setPosition(map.getCenter());
            google.maps.event.removeListener(listener);
          });
      });

    }; //link

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],
      link: linkFunc
    };

  };
  streetViewPanorama.$inject = ['Attr2MapOptions', 'NgMap'];

  angular.module('ngMap').directive('streetViewPanorama', streetViewPanorama);
})();

/**
 * @ngdoc directive
 * @name traffic-layer
 * @param Attr2MapOptions {service} convert html attribute to Google map api options
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @example
 * Example:
 *
 *   &lt;map zoom="13" center="34.04924594193164, -118.24104309082031"&gt;
 *     &lt;traffic-layer&gt;&lt;/traffic-layer&gt;
 *    &lt;/map&gt;
 */
(function() {
  'use strict';

  angular.module('ngMap').directive('trafficLayer', [
    'Attr2MapOptions', function(Attr2MapOptions) {
    var parser = Attr2MapOptions;

    var getLayer = function(options, events) {
      var layer = new google.maps.TrafficLayer(options);
      for (var eventName in events) {
        google.maps.event.addListener(layer, eventName, events[eventName]);
      }
      return layer;
    };

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0]||mapController[1];

        var orgAttrs = parser.orgAttributes(element);
        var filtered = parser.filter(attrs);
        var options = parser.getOptions(filtered, {scope: scope});
        var events = parser.getEvents(scope, filtered);
        void 0;

        var layer = getLayer(options, events);
        mapController.addObject('trafficLayers', layer);
        mapController.observeAttrSetObj(orgAttrs, attrs, layer);  //observers
        element.bind('$destroy', function() {
          mapController.deleteObject('trafficLayers', layer);
        });
      }
     }; // return
  }]);
})();

/**
 * @ngdoc directive
 * @name transit-layer
 * @param Attr2MapOptions {service} convert html attribute to Google map api options
 * @description
 *   Requires:  map directive
 *   Restrict To:  Element
 *
 * @example
 * Example:
 *
 *  &lt;map zoom="13" center="34.04924594193164, -118.24104309082031"&gt;
 *    &lt;transit-layer&gt;&lt;/transit-layer&gt;
 *  &lt;/map&gt;
 */
(function() {
  'use strict';

  angular.module('ngMap').directive('transitLayer', [
    'Attr2MapOptions', function(Attr2MapOptions) {
    var parser = Attr2MapOptions;

    var getLayer = function(options, events) {
      var layer = new google.maps.TransitLayer(options);
      for (var eventName in events) {
        google.maps.event.addListener(layer, eventName, events[eventName]);
      }
      return layer;
    };

    return {
      restrict: 'E',
      require: ['?^map','?^ngMap'],

      link: function(scope, element, attrs, mapController) {
        mapController = mapController[0]||mapController[1];

        var orgAttrs = parser.orgAttributes(element);
        var filtered = parser.filter(attrs);
        var options = parser.getOptions(filtered, {scope: scope});
        var events = parser.getEvents(scope, filtered);
        void 0;

        var layer = getLayer(options, events);
        mapController.addObject('transitLayers', layer);
        mapController.observeAttrSetObj(orgAttrs, attrs, layer);  //observers
        element.bind('$destroy', function() {
          mapController.deleteObject('transitLayers', layer);
        });
      }
     }; // return
  }]);
})();

/**
 * @ngdoc filter
 * @name camel-case
 * @description
 *   Converts string to camel cased
 */
(function() {
  'use strict';

  var SPECIAL_CHARS_REGEXP = /([\:\-\_]+(.))/g;
  var MOZ_HACK_REGEXP = /^moz([A-Z])/;

  var camelCaseFilter = function() {
    return function(name) {
      return name.
        replace(SPECIAL_CHARS_REGEXP,
          function(_, separator, letter, offset) {
            return offset ? letter.toUpperCase() : letter;
        }).
        replace(MOZ_HACK_REGEXP, 'Moz$1');
    };
  };

  angular.module('ngMap').filter('camelCase', camelCaseFilter);
})();

/**
 * @ngdoc filter
 * @name escape-regex
 * @description
 *   Escapes all regex special characters in a string
 */
(function() {
  'use strict';



  var escapeRegexpFilter = function() {
    return function(string) {
			return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&amp;'); // $&amp; means the whole matched string
		};
  };

  angular.module('ngMap').filter('escapeRegexp', escapeRegexpFilter);
})();

/**
 * @ngdoc filter
 * @name jsonize
 * @description
 *   Converts json-like string to json string
 */
(function() {
  'use strict';

  var jsonizeFilter = function() {
    return function(str) {
      try {       // if parsable already, return as it is
        JSON.parse(str);
        return str;
      } catch(e) { // if not parsable, change little
        return str
          // wrap keys without quote with valid double quote
          .replace(/([\$\w]+)\s*:/g,
            function(_, $1) {
              return '"'+$1+'":';
            }
          )
          // replacing single quote wrapped ones to double quote
          .replace(/'([^']+)'/g,
            function(_, $1) {
              return '"'+$1+'"';
            }
          )
          .replace(/''/g, '""');
      }
    };
  };

  angular.module('ngMap').filter('jsonize', jsonizeFilter);
})();

/**
 * @ngdoc service
 * @name Attr2MapOptions
 * @description
 *   Converts tag attributes to options used by google api v3 objects
 */
/* global google */
(function() {
  'use strict';

  //i.e. "2015-08-12T06:12:40.858Z"
  var isoDateRE =
    /^(\d{4}\-\d\d\-\d\d([tT][\d:\.]*)?)([zZ]|([+\-])(\d\d):?(\d\d))?$/;

  var Attr2MapOptions = function(
      $parse, $timeout, $log, $interpolate, NavigatorGeolocation, GeoCoder,
      camelCaseFilter, jsonizeFilter, escapeRegExp
    ) {

    var exprStartSymbol = $interpolate.startSymbol();
    var exprEndSymbol = $interpolate.endSymbol();

    /**
     * Returns the attributes of an element as hash
     * @memberof Attr2MapOptions
     * @param {HTMLElement} el html element
     * @returns {Hash} attributes
     */
    var orgAttributes = function(el) {
      (el.length &gt; 0) &amp;&amp; (el = el[0]);
      var orgAttributes = {};
      for (var i=0; i&lt;el.attributes.length; i++) {
        var attr = el.attributes[i];
        orgAttributes[attr.name] = attr.value;
      }
      return orgAttributes;
    };

    var getJSON = function(input) {
      var re =/^[\+\-]?[0-9\.]+,[ ]*\ ?[\+\-]?[0-9\.]+$/; //lat,lng
      if (input.match(re)) {
        input = "["+input+"]";
      }
      return JSON.parse(jsonizeFilter(input));
    };
    
    var getLatLng = function(input) {
      var output = input;
      if (input[0].constructor == Array) { 
        if ((input[0][0].constructor == Array &amp;&amp; input[0][0].length == 2) || input[0][0].constructor == Object) {
            var preoutput;
            var outputArray = [];
            for (var i = 0; i &lt; input.length; i++) {
                preoutput = input[i].map(function(el){
                    return new google.maps.LatLng(el[0], el[1]);
                });
                outputArray.push(preoutput);
            }
            output = outputArray;
        } else {
            output = input.map(function(el) {
                return new google.maps.LatLng(el[0], el[1]);
            });
        }
      } else if (!isNaN(parseFloat(input[0])) &amp;&amp; isFinite(input[0])) {
        output = new google.maps.LatLng(output[0], output[1]);
      }
      return output;
    };

    var toOptionValue = function(input, options) {
      var output;
      try { // 1. Number?
        output = getNumber(input);
      } catch(err) {
        try { // 2. JSON?
          var output = getJSON(input);
          if (output instanceof Array) {
            if (output[0].constructor == Object) {
              output = output;
            } else if (output[0] instanceof Array) {
              if (output[0][0].constructor == Object) {
                output = output;
              } else {
                output = getLatLng(output);
              }
            } else {
                output = getLatLng(output);
            }
          }
          // JSON is an object (not array or null)
          else if (output === Object(output)) {
            // check for nested hashes and convert to Google API options
            var newOptions = options;
            newOptions.doNotConverStringToNumber = true;
            output = getOptions(output, newOptions);
          }
        } catch(err2) {
          // 3. Google Map Object function Expression. i.e. LatLng(80,-49)
          if (input.match(/^[A-Z][a-zA-Z0-9]+\(.*\)$/)) {
            try {
              var exp = "new google.maps."+input;
              output = eval(exp); /* jshint ignore:line */
            } catch(e) {
              output = input;
            }
          // 4. Google Map Object constant Expression. i.e. MayTypeId.HYBRID
          } else if (input.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/)) {
            try {
              var matches = input.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/);
              output = google.maps[matches[1]][matches[2]];
            } catch(e) {
              output = input;
            }
          // 5. Google Map Object constant Expression. i.e. HYBRID
          } else if (input.match(/^[A-Z]+$/)) {
            try {
              var capitalizedKey = options.key.charAt(0).toUpperCase() +
                options.key.slice(1);
              if (options.key.match(/temperatureUnit|windSpeedUnit|labelColor/)) {
                capitalizedKey = capitalizedKey.replace(/s$/,"");
                output = google.maps.weather[capitalizedKey][input];
              } else {
                output = google.maps[capitalizedKey][input];
              }
            } catch(e) {
              output = input;
            }
          // 6. Date Object as ISO String
          } else if (input.match(isoDateRE)) {
            try {
              output = new Date(input);
            } catch(e) {
              output = input;
            }
          // 7. evaluate dynamically bound values
        } else if (input.match(new RegExp('^' + escapeRegExp(exprStartSymbol))) &amp;&amp; options.scope) {
            try {
              var expr = input.replace(new RegExp(escapeRegExp(exprStartSymbol)),'').replace(new RegExp(escapeRegExp(exprEndSymbol), 'g'),'');
              output = options.scope.$eval(expr);
            } catch (err) {
              output = input;
            }
          } else {
            output = input;
          }
        } // catch(err2)
      } // catch(err)

      // convert output more for center and position
      if (
        (options.key == 'center' || options.key == 'position') &amp;&amp;
        output instanceof Array
      ) {
        output = new google.maps.LatLng(output[0], output[1]);
      }

      // convert output more for shape bounds
      if (options.key == 'bounds' &amp;&amp; output instanceof Array) {
        output = new google.maps.LatLngBounds(output[0], output[1]);
      }

      // convert output more for shape icons
      if (options.key == 'icons' &amp;&amp; output instanceof Array) {

        for (var i=0; i&lt;output.length; i++) {
          var el = output[i];
          if (el.icon.path.match(/^[A-Z_]+$/)) {
            el.icon.path =  google.maps.SymbolPath[el.icon.path];
          }
        }
      }

      // convert output more for marker icon
      if (options.key == 'icon' &amp;&amp; output instanceof Object) {
        if ((""+output.path).match(/^[A-Z_]+$/)) {
          output.path = google.maps.SymbolPath[output.path];
        }
        for (var key in output) { //jshint ignore:line
          var arr = output[key];
          if (key == "anchor" || key == "origin" || key == "labelOrigin") {
            output[key] = new google.maps.Point(arr[0], arr[1]);
          } else if (key == "size" || key == "scaledSize") {
            output[key] = new google.maps.Size(arr[0], arr[1]);
          }
        }
      }

      return output;
    };

    var getAttrsToObserve = function(attrs) {
      var attrsToObserve = [];
      var exprRegExp = new RegExp(escapeRegExp(exprStartSymbol) + '.*' + escapeRegExp(exprEndSymbol), 'g');

      if (!attrs.noWatcher) {
        for (var attrName in attrs) { //jshint ignore:line
          var attrValue = attrs[attrName];
          if (attrValue &amp;&amp; attrValue.match(exprRegExp)) { // if attr value is {{..}}
            attrsToObserve.push(camelCaseFilter(attrName));
          }
        }
      }

      return attrsToObserve;
    };

    /**
     * filters attributes by skipping angularjs methods $.. $$..
     * @memberof Attr2MapOptions
     * @param {Hash} attrs tag attributes
     * @returns {Hash} filterd attributes
     */
    var filter = function(attrs) {
      var options = {};
      for(var key in attrs) {
        if (key.match(/^\$/) || key.match(/^ng[A-Z]/)) {
          void(0);
        } else {
          options[key] = attrs[key];
        }
      }
      return options;
    };

    /**
     * converts attributes hash to Google Maps API v3 options
     * ```
     *  . converts numbers to number
     *  . converts class-like string to google maps instance
     *    i.e. `LatLng(1,1)` to `new google.maps.LatLng(1,1)`
     *  . converts constant-like string to google maps constant
     *    i.e. `MapTypeId.HYBRID` to `google.maps.MapTypeId.HYBRID`
     *    i.e. `HYBRID"` to `google.maps.MapTypeId.HYBRID`
     * ```
     * @memberof Attr2MapOptions
     * @param {Hash} attrs tag attributes
     * @param {Hash} options
     * @returns {Hash} options converted attributess
     */
    var getOptions = function(attrs, params) {
      params = params || {};
      var options = {};
      for(var key in attrs) {
        if (attrs[key] || attrs[key] === 0) {
          if (key.match(/^on[A-Z]/)) { //skip events, i.e. on-click
            continue;
          } else if (key.match(/ControlOptions$/)) { // skip controlOptions
            continue;
          } else {
            // nested conversions need to be typechecked
            // (non-strings are fully converted)
            if (typeof attrs[key] !== 'string') {
              options[key] = attrs[key];
            } else {
              if (params.doNotConverStringToNumber &amp;&amp;
                attrs[key].match(/^[0-9]+$/)
              ) {
                options[key] = attrs[key];
              } else {
                options[key] = toOptionValue(attrs[key], {key: key, scope: params.scope});
              }
            }
          }
        } // if (attrs[key])
      } // for(var key in attrs)
      return options;
    };

    /**
     * converts attributes hash to scope-specific event function
     * @memberof Attr2MapOptions
     * @param {scope} scope angularjs scope
     * @param {Hash} attrs tag attributes
     * @returns {Hash} events converted events
     */
    var getEvents = function(scope, attrs) {
      var events = {};
      var toLowercaseFunc = function($1){
        return "_"+$1.toLowerCase();
      };
      var EventFunc = function(attrValue) {
        // funcName(argsStr)
        var matches = attrValue.match(/([^\(]+)\(([^\)]*)\)/);
        var funcName = matches[1];
        var argsStr = matches[2].replace(/event[ ,]*/,'');  //remove string 'event'
        var argsExpr = $parse("["+argsStr+"]"); //for perf when triggering event
        return function(event) {
          var args = argsExpr(scope); //get args here to pass updated model values
          function index(obj,i) {return obj[i];}
          var f = funcName.split('.').reduce(index, scope);
          f &amp;&amp; f.apply(this, [event].concat(args));
          $timeout( function() {
            scope.$apply();
          });
        };
      };

      for(var key in attrs) {
        if (attrs[key]) {
          if (!key.match(/^on[A-Z]/)) { //skip if not events
            continue;
          }

          //get event name as underscored. i.e. zoom_changed
          var eventName = key.replace(/^on/,'');
          eventName = eventName.charAt(0).toLowerCase() + eventName.slice(1);
          eventName = eventName.replace(/([A-Z])/g, toLowercaseFunc);

          var attrValue = attrs[key];
          events[eventName] = new EventFunc(attrValue);
        }
      }
      return events;
    };

    /**
     * control means map controls, i.e streetview, pan, etc, not a general control
     * @memberof Attr2MapOptions
     * @param {Hash} filtered filtered tag attributes
     * @returns {Hash} Google Map options
     */
    var getControlOptions = function(filtered) {
      var controlOptions = {};
      if (typeof filtered != 'object') {
        return false;
      }

      for (var attr in filtered) {
        if (filtered[attr]) {
          if (!attr.match(/(.*)ControlOptions$/)) {
            continue; // if not controlOptions, skip it
          }

          //change invalid json to valid one, i.e. {foo:1} to {"foo": 1}
          var orgValue = filtered[attr];
          var newValue = orgValue.replace(/'/g, '"');
          newValue = newValue.replace(/([^"]+)|("[^"]+")/g, function($0, $1, $2) {
            if ($1) {
              return $1.replace(/([a-zA-Z0-9]+?):/g, '"$1":');
            } else {
              return $2;
            }
          });
          try {
            var options = JSON.parse(newValue);
            for (var key in options) { //assign the right values
              if (options[key]) {
                var value = options[key];
                if (typeof value === 'string') {
                  value = value.toUpperCase();
                } else if (key === "mapTypeIds") {
                  value = value.map( function(str) {
                    if (str.match(/^[A-Z]+$/)) { // if constant
                      return google.maps.MapTypeId[str.toUpperCase()];
                    } else { // else, custom map-type
                      return str;
                    }
                  });
                }

                if (key === "style") {
                  var str = attr.charAt(0).toUpperCase() + attr.slice(1);
                  var objName = str.replace(/Options$/,'')+"Style";
                  options[key] = google.maps[objName][value];
                } else if (key === "position") {
                  options[key] = google.maps.ControlPosition[value];
                } else {
                  options[key] = value;
                }
              }
            }
            controlOptions[attr] = options;
          } catch (e) {
            void 0;
          }
        }
      } // for

      return controlOptions;
    };

    return {
      filter: filter,
      getOptions: getOptions,
      getEvents: getEvents,
      getControlOptions: getControlOptions,
      toOptionValue: toOptionValue,
      getAttrsToObserve: getAttrsToObserve,
      orgAttributes: orgAttributes
    }; // return

  };
  Attr2MapOptions.$inject= [
    '$parse', '$timeout', '$log', '$interpolate', 'NavigatorGeolocation', 'GeoCoder',
    'camelCaseFilter', 'jsonizeFilter', 'escapeRegexpFilter'
  ];

  angular.module('ngMap').service('Attr2MapOptions', Attr2MapOptions);
})();

/**
 * @ngdoc service
 * @name GeoCoder
 * @description
 *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)
 *   service for Google Geocoder service
 */
(function() {
  'use strict';
  var $q;
  /**
   * @memberof GeoCoder
   * @param {Hash} options
   *   https://developers.google.com/maps/documentation/geocoding/#geocoding
   * @example
   * ```
   *   GeoCoder.geocode({address: 'the cn tower'}).then(function(result) {
   *     //... do something with result
   *   });
   * ```
   * @returns {HttpPromise} Future object
   */
  var geocodeFunc = function(options) {
    var deferred = $q.defer();
    var geocoder = new google.maps.Geocoder();
    geocoder.geocode(options, function (results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        deferred.resolve(results);
      } else {
        deferred.reject(status);
      }
    });
    return deferred.promise;
  };

  var GeoCoder = function(_$q_) {
    $q = _$q_;
    return {
      geocode : geocodeFunc
    };
  };
  GeoCoder.$inject = ['$q'];

  angular.module('ngMap').service('GeoCoder', GeoCoder);
})();

/**
 * @ngdoc service
 * @name GoogleMapsApi
 * @description
 *   Load Google Maps API Service
 */
(function() {
  'use strict';
  var $q;
  var $timeout;

  var GoogleMapsApi = function(_$q_, _$timeout_) {
    $q = _$q_;
    $timeout = _$timeout_;

    return {

      /**
       * Load google maps into document by creating a script tag
       * @memberof GoogleMapsApi
       * @param {string} mapsUrl
       * @example
       *   GoogleMapsApi.load(myUrl).then(function() {
       *     console.log('google map has been loaded')
       *   });
       */
      load: function (mapsUrl) {

        var deferred = $q.defer();

        if (window.google === undefined || window.google.maps === undefined) {

          window.lazyLoadCallback = function() {
            $timeout(function() { /* give some time to load */
              deferred.resolve(window.google)
            }, 100);
          };

          var scriptEl = document.createElement('script');
          scriptEl.src = mapsUrl +
            (mapsUrl.indexOf('?') &gt; -1 ? '&amp;' : '?') +
            'callback=lazyLoadCallback';

          if (!document.querySelector('script[src="' + scriptEl.src + '"]')) {
            document.body.appendChild(scriptEl);
          }
        } else {
          deferred.resolve(window.google)
        }

        return deferred.promise;
      }

    }
  }
  GoogleMapsApi.$inject = ['$q', '$timeout'];

  angular.module('ngMap').service('GoogleMapsApi', GoogleMapsApi);
})();



/**
 * @ngdoc service
 * @name NavigatorGeolocation
 * @description
 *  Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)
 *  service for navigator.geolocation methods
 */
/* global google */
(function() {
  'use strict';
  var $q;

  /**
   * @memberof NavigatorGeolocation
   * @param {Object} geoLocationOptions the navigator geolocations options.
   *  i.e. { maximumAge: 3000, timeout: 5000, enableHighAccuracy: true }.
   *  If none specified, { timeout: 5000 }. 
   *  If timeout not specified, timeout: 5000 added
   * @param {function} success success callback function
   * @param {function} failure failure callback function
   * @example
   * ```
   *  NavigatorGeolocation.getCurrentPosition()
   *    .then(function(position) {
   *      var lat = position.coords.latitude, lng = position.coords.longitude;
   *      .. do something lat and lng
   *    });
   * ```
   * @returns {HttpPromise} Future object
   */
  var getCurrentPosition = function(geoLocationOptions) {
    var deferred = $q.defer();
    if (navigator.geolocation) {

      if (geoLocationOptions === undefined) {
        geoLocationOptions = { timeout: 5000 };
      }
      else if (geoLocationOptions.timeout === undefined) {
        geoLocationOptions.timeout = 5000;
      }

      navigator.geolocation.getCurrentPosition(
        function(position) {
          deferred.resolve(position);
        }, function(evt) {
          void 0;
          deferred.reject(evt);
        },
        geoLocationOptions
      );
    } else {
      deferred.reject("Browser Geolocation service failed.");
    }
    return deferred.promise;
  };

  var NavigatorGeolocation = function(_$q_) {
    $q = _$q_;
    return {
      getCurrentPosition: getCurrentPosition
    };
  };
  NavigatorGeolocation.$inject = ['$q'];

  angular.module('ngMap').
    service('NavigatorGeolocation', NavigatorGeolocation);
})();

/**
 * @ngdoc factory
 * @name NgMapPool
 * @description
 *   Provide map instance to avoid memory leak
 */
(function() {
  'use strict';
  /**
   * @memberof NgMapPool
   * @desc map instance pool
   */
  var mapInstances = [];
  var $window, $document, $timeout;

  var add = function(el) {
    var mapDiv = $document.createElement("div");
    mapDiv.style.width = "100%";
    mapDiv.style.height = "100%";
    el.appendChild(mapDiv);
    var map = new $window.google.maps.Map(mapDiv, {});
    mapInstances.push(map);
    return map;
  };

  var findById = function(el, id) {
    var notInUseMap;
    for (var i=0; i&lt;mapInstances.length; i++) {
      var map = mapInstances[i];
      if (map.id == id &amp;&amp; !map.inUse) {
        var mapDiv = map.getDiv();
        el.appendChild(mapDiv);
        notInUseMap = map;
        break;
      }
    }
    return notInUseMap;
  };

  var findUnused = function(el) { //jshint ignore:line
    var notInUseMap;
    for (var i=0; i&lt;mapInstances.length; i++) {
      var map = mapInstances[i];
      if (map.id) {
        continue;
      }
      if (!map.inUse) {
        var mapDiv = map.getDiv();
        el.appendChild(mapDiv);
        notInUseMap = map;
        break;
      }
    }
    return notInUseMap;
  };

  /**
   * @memberof NgMapPool
   * @function getMapInstance
   * @param {HtmlElement} el map container element
   * @return map instance for the given element
   */
  var getMapInstance = function(el) {
    var map = findById(el, el.id) || findUnused(el);
    if (!map) {
      map = add(el);
    } else {
      /* firing map idle event, which is used by map controller */
      $timeout(function() {
        google.maps.event.trigger(map, 'idle');
      }, 100);
    }
    map.inUse = true;
    return map;
  };

  /**
   * @memberof NgMapPool
   * @function returnMapInstance
   * @param {Map} an instance of google.maps.Map
   * @desc sets the flag inUse of the given map instance to false, so that it 
   * can be reused later
   */
  var returnMapInstance = function(map) {
    map.inUse = false;
  };
  
  /**
   * @memberof NgMapPool
   * @function resetMapInstances
   * @desc resets mapInstance array
   */
  var resetMapInstances = function() {
    for(var i = 0;i &lt; mapInstances.length;i++) {
        mapInstances[i] = null;
    }
    mapInstances = [];
  };
  
  /**
   * @memberof NgMapPool
   * @function deleteMapInstance
   * @desc delete a mapInstance
   */
  var deleteMapInstance= function(mapId) {
	  for( var i=0; i&lt;mapInstances.length; i++ ) {
		  if( (mapInstances[i] !== null) &amp;&amp; (mapInstances[i].id == mapId)) {
			  mapInstances[i]= null;
			  mapInstances.splice( i, 1 );
		  }
	  }
  };

  var NgMapPool = function(_$document_, _$window_, _$timeout_) {
    $document = _$document_[0], $window = _$window_, $timeout = _$timeout_;

    return {
	  mapInstances: mapInstances,
      resetMapInstances: resetMapInstances,
      getMapInstance: getMapInstance,
      returnMapInstance: returnMapInstance,
      deleteMapInstance: deleteMapInstance
    };
  };

  NgMapPool.$inject = [ '$document', '$window', '$timeout'];

  angular.module('ngMap').factory('NgMapPool', NgMapPool);

})();

/**
 * @ngdoc provider
 * @name NgMap
 * @description
 *  common utility service for ng-map
 */
(function() {
  'use strict';
  var $window, $document, $q;
  var NavigatorGeolocation, Attr2MapOptions, GeoCoder, camelCaseFilter, NgMapPool;

  var mapControllers = {};

  var getStyle = function(el, styleProp) {
    var y;
    if (el.currentStyle) {
      y = el.currentStyle[styleProp];
    } else if ($window.getComputedStyle) {
      y = $document.defaultView.
        getComputedStyle(el, null).
        getPropertyValue(styleProp);
    }
    return y;
  };

  /**
   * @memberof NgMap
   * @function initMap
   * @param id optional, id of the map. default 0
   */
  var initMap = function(id) {
    var ctrl = mapControllers[id || 0];
    if (!(ctrl.map instanceof google.maps.Map)) {
      ctrl.initializeMap();
      return ctrl.map;
    } else {
      void 0;
    }
  };

  /**
   * @memberof NgMap
   * @function getMap
   * @param {String} optional, id e.g., 'foo'
   * @returns promise
   */
  var getMap = function(id, options) {
    options = options || {};
    id = typeof id === 'object' ? id.id : id;

    var deferred = $q.defer();
    var timeout = options.timeout || 10000;

    function waitForMap(timeElapsed){
      var keys = Object.keys(mapControllers);
      var theFirstController = mapControllers[keys[0]];
      if(id &amp;&amp; mapControllers[id]){
        deferred.resolve(mapControllers[id].map);
      } else if (!id &amp;&amp; theFirstController &amp;&amp; theFirstController.map) {
        deferred.resolve(theFirstController.map);
      } else if (timeElapsed &gt; timeout) {
        deferred.reject('could not find map');
      } else {
        $window.setTimeout( function(){
          waitForMap(timeElapsed+100);
        }, 100);
      }
    }
    waitForMap(0);

    return deferred.promise;
  };

  /**
   * @memberof NgMap
   * @function addMap
   * @param mapController {__MapContoller} a map controller
   * @returns promise
   */
  var addMap = function(mapCtrl) {
    if (mapCtrl.map) {
      var len = Object.keys(mapControllers).length;
      mapControllers[mapCtrl.map.id || len] = mapCtrl;
    }
  };

  /**
   * @memberof NgMap
   * @function deleteMap
   * @param mapController {__MapContoller} a map controller
   */
  var deleteMap = function(mapCtrl) {
    var len = Object.keys(mapControllers).length - 1;
    var mapId = mapCtrl.map.id || len;
    if (mapCtrl.map) {
      for (var eventName in mapCtrl.eventListeners) {
        void 0;
        var listener = mapCtrl.eventListeners[eventName];
        google.maps.event.removeListener(listener);
      }
      if (mapCtrl.map.controls) {
        mapCtrl.map.controls.forEach(function(ctrl) {
          ctrl.clear();
        });
      }
    }

    //Remove Heatmap Layers
    if (mapCtrl.map.heatmapLayers) {
      Object.keys(mapCtrl.map.heatmapLayers).forEach(function (layer) {
        mapCtrl.deleteObject('heatmapLayers', mapCtrl.map.heatmapLayers[layer]);
      });
    }

    NgMapPool.deleteMapInstance(mapId);

    delete mapControllers[mapId];
  };

  /**
   * @memberof NgMap
   * @function getGeoLocation
   * @param {String} address
   * @param {Hash} options geo options
   * @returns promise
   */
  var getGeoLocation = function(string, options) {
    var deferred = $q.defer();
    if (!string || string.match(/^current/i)) { // current location
      NavigatorGeolocation.getCurrentPosition(options).then(
        function(position) {
          var lat = position.coords.latitude;
          var lng = position.coords.longitude;
          var latLng = new google.maps.LatLng(lat,lng);
          deferred.resolve(latLng);
        },
        function(error) {
          deferred.reject(error);
        }
      );
    } else {
      GeoCoder.geocode({address: string}).then(
        function(results) {
          deferred.resolve(results[0].geometry.location);
        },
        function(error) {
          deferred.reject(error);
        }
      );
      // var geocoder = new google.maps.Geocoder();
      // geocoder.geocode(options, function (results, status) {
      //   if (status == google.maps.GeocoderStatus.OK) {
      //     deferred.resolve(results);
      //   } else {
      //     deferred.reject(status);
      //   }
      // });
    }

    return deferred.promise;
  };

  /**
   * @memberof NgMap
   * @function observeAndSet
   * @param {String} attrName attribute name
   * @param {Object} object A Google maps object to be changed
   * @returns attribue observe function
   */
  var observeAndSet = function(attrName, object) {
    void 0;
    return function(val) {
      if (val) {
        var setMethod = camelCaseFilter('set-'+attrName);
        var optionValue = Attr2MapOptions.toOptionValue(val, {key: attrName});
        if (object[setMethod]) { //if set method does exist
          void 0;
          /* if an location is being observed */
          if (attrName.match(/center|position/) &amp;&amp;
            typeof optionValue == 'string') {
            getGeoLocation(optionValue).then(function(latlng) {
              object[setMethod](latlng);
            });
          } else {
            object[setMethod](optionValue);
          }
        }
      }
    };
  };

  /**
   * @memberof NgMap
   * @function setStyle
   * @param {HtmlElement} map contriner element
   * @desc set display, width, height of map container element
   */
  var setStyle = function(el) {
    //if style is not given to the map element, set display and height
    var defaultStyle = el.getAttribute('default-style');
    if (defaultStyle == "true") {
      el.style.display = 'block';
      el.style.height = '300px';
    } else {
      if (getStyle(el, 'display') != "block") {
        el.style.display = 'block';
      }
      if (getStyle(el, 'height').match(/^(0|auto)/)) {
        el.style.height = '300px';
      }
    }
  };

  angular.module('ngMap').provider('NgMap', function() {
    var defaultOptions = {};

    /**
     * @memberof NgMap
     * @function setDefaultOptions
     * @param {Hash} options
     * @example
     *  app.config(function(NgMapProvider) {
     *    NgMapProvider.setDefaultOptions({
     *      marker: {
     *        optimized: false
     *      }
     *    });
     *  });
     */
    this.setDefaultOptions = function(options) {
      defaultOptions = options;
    };

    var NgMap = function(
        _$window_, _$document_, _$q_,
        _NavigatorGeolocation_, _Attr2MapOptions_,
        _GeoCoder_, _camelCaseFilter_, _NgMapPool_
      ) {
      $window = _$window_;
      $document = _$document_[0];
      $q = _$q_;
      NavigatorGeolocation = _NavigatorGeolocation_;
      Attr2MapOptions = _Attr2MapOptions_;
      GeoCoder = _GeoCoder_;
      camelCaseFilter = _camelCaseFilter_;
      NgMapPool = _NgMapPool_;

      return {
        defaultOptions: defaultOptions,
        addMap: addMap,
        deleteMap: deleteMap,
        getMap: getMap,
        initMap: initMap,
        setStyle: setStyle,
        getGeoLocation: getGeoLocation,
        observeAndSet: observeAndSet
      };
    };
    NgMap.$inject = [
      '$window', '$document', '$q',
      'NavigatorGeolocation', 'Attr2MapOptions',
      'GeoCoder', 'camelCaseFilter', 'NgMapPool'
    ];

    this.$get = NgMap;
  });
})();

/**
 * @ngdoc service
 * @name StreetView
 * @description
 *  Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)
 *  service for [Google StreetViewService]
 *  (https://developers.google.com/maps/documentation/javascript/streetview)
 */
(function() {
  'use strict';
  var $q;

  /**
   * Retrieves panorama id from the given map (and or position)
   * @memberof StreetView
   * @param {map} map Google map instance
   * @param {LatLng} latlng Google LatLng instance
   *   default: the center of the map
   * @example
   *   StreetView.getPanorama(map).then(function(panoId) {
   *     $scope.panoId = panoId;
   *   });
   * @returns {HttpPromise} Future object
   */
  var getPanorama = function(map, latlng) {
    latlng = latlng || map.getCenter();
    var deferred = $q.defer();
    var svs = new google.maps.StreetViewService();
    svs.getPanoramaByLocation( (latlng||map.getCenter), 100,
      function (data, status) {
        // if streetView available
        if (status === google.maps.StreetViewStatus.OK) {
          deferred.resolve(data.location.pano);
        } else {
          // no street view available in this range, or some error occurred
          deferred.resolve(false);
          //deferred.reject('Geocoder failed due to: '+ status);
        }
      }
    );
    return deferred.promise;
  };

  /**
   * Set panorama view on the given map with the panorama id
   * @memberof StreetView
   * @param {map} map Google map instance
   * @param {String} panoId Panorama id fro getPanorama method
   * @example
   *   StreetView.setPanorama(map, panoId);
   */
  var setPanorama = function(map, panoId) {
    var svp = new google.maps.StreetViewPanorama(
      map.getDiv(), {enableCloseButton: true}
    );
    svp.setPano(panoId);
  };

  var StreetView = function(_$q_) {
    $q = _$q_;

    return {
      getPanorama: getPanorama,
      setPanorama: setPanorama
    };
  };
  StreetView.$inject = ['$q'];

  angular.module('ngMap').service('StreetView', StreetView);
})();

return 'ngMap';
}));
]]&gt;&lt;/script&gt;&lt;script_name/&gt;&lt;sys_class_name&gt;sys_ui_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-06-26 01:59:59&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;3c7cfaafdb729740497856f3ce961971&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;angularjs-google-maps&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_script_3c7cfaafdb729740497856f3ce961971&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-06-26 01:59:59&lt;/sys_updated_on&gt;&lt;use_scoped_format&gt;false&lt;/use_scoped_format&gt;&lt;/sys_ui_script&gt;&lt;/record_update&gt;</payload><payload_hash>1992557475</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>67214433db369740497856f3ce96191c</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>16439d1ad210000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>angularjs-google-maps</target_name><type>UI Script</type><update_domain>global</update_domain><update_guid>948cbaaf567297408ec7dfa0f164a2b1</update_guid><update_guid_history>948cbaaf567297408ec7dfa0f164a2b1:1992557475</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>sp_widget_4e3a6e2adbb21740497856f3ce96191d</name><payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope) {  
     var c = this;  
  
     //Watch for changes in the color variable  
     $scope.$watch(function () {  
          return $scope.page.g_form.getValue('color');  
     }, function (value) {  
     //Update local data object with data from variable  
     c.data.message = value ? 'Content of color variable: ' + value : '';  
});  
}  ]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id/&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;test w&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-06-22 22:06:36&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;4e3a6e2adbb21740497856f3ce96191d&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;test w&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_4e3a6e2adbb21740497856f3ce96191d&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-06-22 22:06:44&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div&gt;  
  Data from catalog variable:  
  &lt;h1&gt;{{ c.data.message }}&lt;/h1&gt;  
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload><payload_hash>1769188284</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>6b214433db369740497856f3ce96191b</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>16429890a440000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>test w</target_name><type>Widget</type><update_domain>global</update_domain><update_guid>025aee2ad7b2174080b366702cdd350e</update_guid><update_guid_history>025aee2ad7b2174080b366702cdd350e:1769188284,d45aa62a49b217406bedcd682d60648d:-212418468</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>sp_dependency_e544dfaedbf21740497856f3ce9619d9</name><payload><![CDATA[<record_update table="sp_dependency"><sp_dependency action="INSERT_OR_UPDATE"><module>places</module><name>GoogleAPI</name><page_load>false</page_load><sp_portals/><sys_class_name>sp_dependency</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 01:10:37</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>e544dfaedbf21740497856f3ce9619d9</sys_id><sys_mod_count>0</sys_mod_count><sys_name>GoogleAPI</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>sp_dependency_e544dfaedbf21740497856f3ce9619d9</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 01:10:37</sys_updated_on></sp_dependency></record_update>]]></payload><payload_hash>1536083543</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>6f214433db369740497856f3ce96191a</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642a31641b0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>GoogleAPI</target_name><type>Widget Dependency</type><update_domain>global</update_domain><update_guid>b3641f2a9ef21740ad3b132ece95bc89</update_guid><update_guid_history>b3641f2a9ef21740ad3b132ece95bc89:1536083543</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>item_option_new_a479662adbb21740497856f3ce96198a</name><payload><![CDATA[<record_update table="item_option_new"><item_option_new action="INSERT_OR_UPDATE"><active>true</active><attributes/><cat_item display_value="Sample Page">3969622adbb21740497856f3ce961996</cat_item><category/><choice_direction>down</choice_direction><choice_field/><choice_table/><create_roles/><default_html_value/><default_value/><delete_roles/><delivery_plan/><description/><display_title>false</display_title><do_not_select_first>false</do_not_select_first><dynamic_default_value/><dynamic_ref_qual/><example_text/><field/><global>false</global><help_tag>More information</help_tag><help_text/><include_none>false</include_none><instructions/><layout>normal</layout><list_table/><lookup_label/><lookup_price/><lookup_table/><lookup_unique>false</lookup_unique><lookup_value/><macro/><mandatory>false</mandatory><map_to_field>false</map_to_field><mask_use_confirmation>false</mask_use_confirmation><mask_use_encryption>false</mask_use_encryption><name>test</name><order>10</order><price_if_checked>0</price_if_checked><pricing_implications>false</pricing_implications><question_text>test</question_text><read_roles/><rec_lookup_price/><rec_price_if_checked>0</rec_price_if_checked><record/><record_producer_table/><reference/><reference_qual/><reference_qual_condition/><scale_max>5</scale_max><scale_min>0</scale_min><show_help>false</show_help><show_help_on_load>false</show_help_on_load><sp_widget display_value="new Test">50e3dbaedbf21740497856f3ce9619e2</sp_widget><summary_macro/><sys_class_name>item_option_new</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-22 22:06:59</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>a479662adbb21740497856f3ce96198a</sys_id><sys_mod_count>2</sys_mod_count><sys_name>test</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>item_option_new_a479662adbb21740497856f3ce96198a</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:55:16</sys_updated_on><table/><tooltip/><type>14</type><ui_page/><use_dynamic_default>false</use_dynamic_default><use_reference_qualifier>simple</use_reference_qualifier><variable_name/><variable_set/><variable_width/><visibility>1</visibility><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><visible_summary>true</visible_summary><write_roles/></item_option_new><sys_translated_text action="delete_multiple" query="documentkey=a479662adbb21740497856f3ce96198a"/><fx_price action="delete_multiple" query="id=a479662adbb21740497856f3ce96198a"/><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>price_if_checked</field><id>a479662adbb21740497856f3ce96198a</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-22 22:06:59</sys_created_on><sys_id>0a6aee2adbb21740497856f3ce961912</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-22 22:06:59</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>rec_price_if_checked</field><id>a479662adbb21740497856f3ce96198a</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-22 22:06:59</sys_created_on><sys_id>ce6aee2adbb21740497856f3ce961911</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-22 22:06:59</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price></record_update>]]></payload><payload_hash>1977338769</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>93214433db369740497856f3ce961919</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642b35fea60000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>test</target_name><type>Variable</type><update_domain>global</update_domain><update_guid>a99510fe8d761740022c2c3d743c3ce6</update_guid><update_guid_history>a99510fe8d761740022c2c3d743c3ce6:1977338769,605d0cba53761740953ef666bd1d22fa:-92377016,866aee2a09b21740d08dae06eff70e15:-1857428581</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>item_option_new_539d80badb761740497856f3ce96194a</name><payload><![CDATA[<record_update table="item_option_new"><item_option_new action="INSERT_OR_UPDATE"><active>true</active><attributes/><cat_item display_value="Sample Page">3969622adbb21740497856f3ce961996</cat_item><category/><choice_direction>down</choice_direction><choice_field/><choice_table/><create_roles/><default_html_value/><default_value/><delete_roles/><delivery_plan/><description/><display_title>false</display_title><do_not_select_first>false</do_not_select_first><dynamic_default_value/><dynamic_ref_qual/><example_text/><field/><global>false</global><help_tag>More information</help_tag><help_text/><include_none>false</include_none><instructions/><layout>normal</layout><list_table/><lookup_label/><lookup_price/><lookup_table/><lookup_unique>false</lookup_unique><lookup_value/><macro/><mandatory>false</mandatory><map_to_field>false</map_to_field><mask_use_confirmation>false</mask_use_confirmation><mask_use_encryption>false</mask_use_encryption><name>route</name><order>50</order><price_if_checked>0</price_if_checked><pricing_implications>false</pricing_implications><question_text>Street Name</question_text><read_roles/><rec_lookup_price/><rec_price_if_checked>0</rec_price_if_checked><record/><record_producer_table/><reference/><reference_qual/><reference_qual_condition/><scale_max>5</scale_max><scale_min>0</scale_min><show_help>false</show_help><show_help_on_load>false</show_help_on_load><sp_widget/><summary_macro/><sys_class_name>item_option_new</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:20:43</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>539d80badb761740497856f3ce96194a</sys_id><sys_mod_count>3</sys_mod_count><sys_name>Street Name</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>item_option_new_539d80badb761740497856f3ce96194a</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:55:50</sys_updated_on><table/><tooltip/><type>6</type><ui_page/><use_dynamic_default>false</use_dynamic_default><use_reference_qualifier>simple</use_reference_qualifier><variable_name/><variable_set/><variable_width/><visibility>1</visibility><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><visible_summary>true</visible_summary><write_roles/></item_option_new><sys_translated_text action="delete_multiple" query="documentkey=539d80badb761740497856f3ce96194a"/><fx_price action="delete_multiple" query="id=539d80badb761740497856f3ce96194a"/><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>price_if_checked</field><id>539d80badb761740497856f3ce96194a</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:20:43</sys_created_on><sys_id>9fad40fadb761740497856f3ce9619cc</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:20:43</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>rec_price_if_checked</field><id>539d80badb761740497856f3ce96194a</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:20:43</sys_created_on><sys_id>53ad40fadb761740497856f3ce9619cc</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:20:43</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price></record_update>]]></payload><payload_hash>-43334791</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>97214433db369740497856f3ce961918</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642b3683da0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>Street Name</target_name><type>Variable</type><update_domain>global</update_domain><update_guid>b5b554fe5e761740057834fb18bfab9e</update_guid><update_guid_history>b5b554fe5e761740057834fb18bfab9e:-43334791,18a5d8be307617406a83806c94719c99:-2051778312,f65310bee3761740313678a0eaf5f7b2:383259964,9fad40fa9a761740ea51d5fb025586cf:-2077468228</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>m2m_sp_dependency_js_include_938493eedbf21740497856f3ce96193c</name><payload><![CDATA[<record_update table="m2m_sp_dependency_js_include"><m2m_sp_dependency_js_include action="INSERT_OR_UPDATE"><order>100</order><sp_dependency display_value="GoogleAPI">e544dfaedbf21740497856f3ce9619d9</sp_dependency><sp_js_include display_value="https://maps.googleapis.com/maps/api/js?key=AIzaSyDr3Imv6rReJ4CjTSdgUJp4MyInVEtKrCc&amp;sensor=false&amp;libraries=places">467493eedbf21740497856f3ce961936</sp_js_include><sys_class_name>m2m_sp_dependency_js_include</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 01:11:07</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>938493eedbf21740497856f3ce96193c</sys_id><sys_mod_count>0</sys_mod_count><sys_name>GoogleAPI.https://maps.googleapis.com/maps/api/js?key=AIzaSyDr3Imv6rReJ4CjTSdgUJp4MyInVEtKrCc&amp;sensor=false&amp;libraries=places</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>m2m_sp_dependency_js_include_938493eedbf21740497856f3ce96193c</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 01:11:07</sys_updated_on></m2m_sp_dependency_js_include></record_update>]]></payload><payload_hash>-1921319806</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>9f214433db369740497856f3ce961919</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642a31db480000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>GoogleAPI.https://maps.googleapis.com/maps/api/js?key=AIzaSyDr3Imv6rReJ4CjTSdgUJp4MyInVEtKrCc&amp;sensor</target_name><type>Dependency JS Includes</type><update_domain>global</update_domain><update_guid>578493eed7f217408e36e842d4552cc6</update_guid><update_guid_history>578493eed7f217408e36e842d4552cc6:-1921319806</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>sys_ui_script_1394d3eedbf21740497856f3ce9619b9</name><payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_script"&gt;&lt;sys_ui_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;description/&gt;&lt;global&gt;false&lt;/global&gt;&lt;name&gt;angularjs-google-maps.js&lt;/name&gt;&lt;script&gt;&lt;![CDATA[(function(window, document) {

// Create all modules and define dependencies to make sure they exist
// and are loaded in the correct order to satisfy dependency injection
// before all nested files are concatenated by Grunt

// Config
angular.module('gm.config', [])
    .value('gm.config', {
        debug: true,
        placess: {
            autocomplete: {}
        }
    })
    .run(['$window', function($window){

        // Check for dependencies
        if(
            angular.isUndefined($window.google) ||
            angular.isUndefined($window.google.maps)
            ){
            throw new Error('Google Maps API not available, please make sure the Google Maps library is loaded before the AngularJS Google Maps library is loaded');
        }
    }]);

// Places modules
angular.module('gm.places.directives', []);
angular.module('gm.places', [
    'gm.places.directives'
])
    .run(['$window', function($window){

        // Check for dependencies
        if(
            angular.isUndefined($window.google) ||
            angular.isUndefined($window.google.maps) ||
            angular.isUndefined($window.google.maps.places) ||
            angular.isUndefined($window.google.maps.places.Autocomplete)
            ){
            throw new Error('Google Maps API not available, please make sure the Google Maps library is loaded before the AngularJS Google Maps library is loaded');
        }
    }]);

// Modules
angular.module('gm.directives', []);
angular.module('gm.filters', []);
angular.module('gm.services', []);
angular.module('gm', [
    'gm.config',
    'gm.directives',
    'gm.filters',
    'gm.services',
    'gm.places'
]);
/**
 * Logger service
 */
angular.module('gm.services')
    .factory('logger', ['$log', '$window', function ($log, $window) {

        // Create service
        var service = {};

        // Proxy regular methods to $log
        angular.forEach(['log', 'info', 'warn', 'error'], function(method){
            service[method] = function(){
                return $log[method](arguments);
            };
        });


        // Add dir method to hierarchically display objects
        service.dir = function (obj, title) {
            if ($window.console) {
                if (angular.isDefined(title)) {
                    $log.info(title + ':');
                }
                $window.console.dir(obj);
            }
        };

        return service;
    }]);angular.module('gm.places')
    .directive('gmPlacesAutocomplete', ['$rootScope', 'gm.config', 'logger', function($rootScope, gmConfig, logger){

        var configOptions = (gmConfig.places &amp;&amp; gmConfig.places.autocomplete) || {};

        return {
            restrict: 'AEC',
            require : ['gmPlacesAutocomplete', '?ngModel'],
            controller: ['$scope', '$element', '$attrs', '$transclude', function($scope, $element, $attrs, $transclude){

                this._options = angular.extend({}, configOptions, $scope.$eval($attrs.gmOptions));
                this._element = $element[0];
                this._api = undefined;

                // Define properties
                Object.defineProperties(this, {
                    element: {
                        get: function(){
                            return this._element;
                        },
                        configurable: false
                    },
                    api: {
                        get: function(){
                            return this._api;
                        },
                        configurable: false
                    }
                });

                try {
                    this._api = new google.maps.places.Autocomplete(this._element, this._options);
                }
                catch (err)
                {
                    if(gmConfig.debug) logger.log('Could not instantiate gmPlacesAutocomplete directive: ' + err.message);
                }

            }],
            link: function(scope, iElement, iAttrs, controllers){

                // Define controllers
                var gmPlacesAutocompleteController = controllers[0];
                var ngModelController = controllers[1];

                // Set initial model value if a model is defined
                if (ngModelController) {
                    ngModelController.$setViewValue(gmPlacesAutocompleteController.api);
                }

                // Listen to place_changed event
                google.maps.event.addListener(gmPlacesAutocompleteController.api, 'place_changed',
                    (function(scope, iElement, iAttrs, gmPlacesAutocompleteController, ngModelController, $rootScope){
                        return function(){

                            // Update model if there is one
                            if (ngModelController) {
                                ngModelController.$setViewValue(gmPlacesAutocompleteController.api);
                            }

                            // Broadcast event
                            $rootScope.$broadcast('gmPlacesAutocomplete::placeChanged', gmPlacesAutocompleteController);
                        };
                    })(scope, iElement, iAttrs, gmPlacesAutocompleteController, ngModelController, $rootScope)
                );

            }
        };

    }]);})(window, document);]]&gt;&lt;/script&gt;&lt;script_name/&gt;&lt;sys_class_name&gt;sys_ui_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-06-23 01:11:45&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;1394d3eedbf21740497856f3ce9619b9&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;angularjs-google-maps.js&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_script_1394d3eedbf21740497856f3ce9619b9&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-06-23 01:11:45&lt;/sys_updated_on&gt;&lt;use_scoped_format&gt;false&lt;/use_scoped_format&gt;&lt;/sys_ui_script&gt;&lt;/record_update&gt;</payload><payload_hash>1894470615</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>a3214433db369740497856f3ce96191c</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642a326f810000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>angularjs-google-maps.js</target_name><type>UI Script</type><update_domain>global</update_domain><update_guid>28b41faec4f217407cb1f00f8e33bd4c</update_guid><update_guid_history>28b41faec4f217407cb1f00f8e33bd4c:1894470615</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>sp_js_include_8c6cbaafdb729740497856f3ce9619ab</name><payload><![CDATA[<record_update table="sp_js_include"><sp_js_include action="INSERT_OR_UPDATE"><display_name>angularjs-google-amps</display_name><source>local</source><sys_class_name>sp_js_include</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-26 02:00:01</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>8c6cbaafdb729740497856f3ce9619ab</sys_id><sys_mod_count>0</sys_mod_count><sys_name>angularjs-google-amps</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_ui_script display_value="angularjs-google-maps">3c7cfaafdb729740497856f3ce961971</sys_ui_script><sys_update_name>sp_js_include_8c6cbaafdb729740497856f3ce9619ab</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-26 02:00:01</sys_updated_on><url/></sp_js_include></record_update>]]></payload><payload_hash>2130467205</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>a7214433db369740497856f3ce96191b</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>16439d1b4dc0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>angularjs-google-amps</target_name><type>JS Include</type><update_domain>global</update_domain><update_guid>b08cfaaf7d729740f0147dfedfa5c077</update_guid><update_guid_history>b08cfaaf7d729740f0147dfedfa5c077:2130467205</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>sc_cat_item_3969622adbb21740497856f3ce961996</name><payload><![CDATA[<record_update table="sc_cat_item"><sc_cat_item action="INSERT_OR_UPDATE"><active>true</active><availability>on_desktop</availability><billable>false</billable><category/><cost>0</cost><custom_cart/><delivery_plan display_value="DEFAULT">523da512c611228900811a37c97c2014</delivery_plan><delivery_plan_script/><delivery_time>1970-01-03 00:00:00</delivery_time><description/><entitlement_script/><group/><hide_sp>false</hide_sp><icon/><ignore_price>false</ignore_price><image/><list_price>0</list_price><location/><meta/><mobile_hide_price>false</mobile_hide_price><mobile_picture/><mobile_picture_type>use_desktop_picture</mobile_picture_type><model/><name>Sample Page</name><no_cart>false</no_cart><no_order>false</no_order><no_order_now>false</no_order_now><no_proceed_checkout>false</no_proceed_checkout><no_quantity>false</no_quantity><no_search>false</no_search><omit_price>false</omit_price><order>0</order><ordered_item_link/><picture/><preview>JavaScript: popupOpenStandard("com.glideapp.servicecatalog_cat_item_view.do?v=1&amp;sysparm_id=3969622adbb21740497856f3ce961996&amp;sysparm_preview=true", "summary");</preview><price>0</price><recurring_frequency/><recurring_price>0</recurring_price><roles/><sc_catalogs/><sc_ic_item_staging/><sc_ic_version/><short_description/><show_variable_help_on_load>false</show_variable_help_on_load><start_closed>false</start_closed><sys_class_name>sc_cat_item</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-22 22:02:42</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>3969622adbb21740497856f3ce961996</sys_id><sys_mod_count>0</sys_mod_count><sys_name>Sample Page</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>sc_cat_item_3969622adbb21740497856f3ce961996</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-22 22:02:42</sys_updated_on><template/><type>item</type><use_sc_layout>true</use_sc_layout><vendor/><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><workflow/></sc_cat_item><sys_translated_text action="delete_multiple" query="documentkey=3969622adbb21740497856f3ce961996"/><fx_price action="delete_multiple" query="id=3969622adbb21740497856f3ce961996"/><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>price</field><id>3969622adbb21740497856f3ce961996</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-22 22:02:42</sys_created_on><sys_id>9b692eaedb321740497856f3ce961984</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-22 22:02:42</sys_updated_on><table>sc_cat_item</table><type>calculated</type></fx_price><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>recurring_price</field><id>3969622adbb21740497856f3ce961996</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-22 22:02:43</sys_created_on><sys_id>df692eaedb321740497856f3ce961985</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-22 22:02:43</sys_updated_on><table>sc_cat_item</table><type>calculated</type></fx_price></record_update>]]></payload><payload_hash>281067267</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>ab214433db369740497856f3ce96191a</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>16429855c380000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>Sample Page</target_name><type>Catalog Item</type><update_domain>global</update_domain><update_guid>db69262a10b21740a5f7fd6d25d769a5</update_guid><update_guid_history>db69262a10b21740a5f7fd6d25d769a5:281067267</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>item_option_new_3a44987edb761740497856f3ce9619e8</name><payload><![CDATA[<record_update table="item_option_new"><item_option_new action="INSERT_OR_UPDATE"><active>true</active><attributes/><cat_item display_value="Sample Page">3969622adbb21740497856f3ce961996</cat_item><category/><choice_direction>down</choice_direction><choice_field/><choice_table/><create_roles/><default_html_value/><default_value/><delete_roles/><delivery_plan/><description/><display_title>false</display_title><do_not_select_first>false</do_not_select_first><dynamic_default_value/><dynamic_ref_qual/><example_text/><field/><global>false</global><help_tag>More information</help_tag><help_text/><include_none>false</include_none><instructions/><layout>normal</layout><list_table/><lookup_label/><lookup_price/><lookup_table/><lookup_unique>false</lookup_unique><lookup_value/><macro/><mandatory>false</mandatory><map_to_field>false</map_to_field><mask_use_confirmation>false</mask_use_confirmation><mask_use_encryption>false</mask_use_encryption><name>full_address</name><order>20</order><price_if_checked>0</price_if_checked><pricing_implications>false</pricing_implications><question_text>Full Address</question_text><read_roles/><rec_lookup_price/><rec_price_if_checked>0</rec_price_if_checked><record/><record_producer_table/><reference/><reference_qual/><reference_qual_condition/><scale_max>5</scale_max><scale_min>0</scale_min><show_help>false</show_help><show_help_on_load>false</show_help_on_load><sp_widget/><summary_macro/><sys_class_name>item_option_new</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:49:38</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>3a44987edb761740497856f3ce9619e8</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Full Address</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>item_option_new_3a44987edb761740497856f3ce9619e8</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:55:23</sys_updated_on><table/><tooltip/><type>6</type><ui_page/><use_dynamic_default>false</use_dynamic_default><use_reference_qualifier>simple</use_reference_qualifier><variable_name/><variable_set/><variable_width/><visibility>1</visibility><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><visible_summary>true</visible_summary><write_roles/></item_option_new><sys_translated_text action="delete_multiple" query="documentkey=3a44987edb761740497856f3ce9619e8"/><fx_price action="delete_multiple" query="id=3a44987edb761740497856f3ce9619e8"/><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>price_if_checked</field><id>3a44987edb761740497856f3ce9619e8</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:49:38</sys_created_on><sys_id>3644987edb761740497856f3ce9619ea</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:49:38</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>rec_price_if_checked</field><id>3a44987edb761740497856f3ce9619e8</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:49:38</sys_created_on><sys_id>fa44987edb761740497856f3ce9619e9</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:49:38</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price></record_update>]]></payload><payload_hash>593025005</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>d3214433db369740497856f3ce961918</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642b36196b0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>Full Address</target_name><type>Variable</type><update_domain>global</update_domain><update_guid>0b9514fed0761740e986d178822378ce</update_guid><update_guid_history>0b9514fed0761740e986d178822378ce:593025005,3644987e2f7617404f43bd5a125c08ed:482196921</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>m2m_sp_dependency_js_include_3db493eedbf21740497856f3ce9619ca</name><payload><![CDATA[<record_update table="m2m_sp_dependency_js_include"><m2m_sp_dependency_js_include action="INSERT_OR_UPDATE"><order>100</order><sp_dependency display_value="GoogleAPI">e544dfaedbf21740497856f3ce9619d9</sp_dependency><sp_js_include display_value="angularjs-google-maps.js">7994dfaedbf21740497856f3ce9619dd</sp_js_include><sys_class_name>m2m_sp_dependency_js_include</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 01:11:51</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>3db493eedbf21740497856f3ce9619ca</sys_id><sys_mod_count>0</sys_mod_count><sys_name>GoogleAPI.angularjs-google-maps.js</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>m2m_sp_dependency_js_include_3db493eedbf21740497856f3ce9619ca</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 01:11:51</sys_updated_on></m2m_sp_dependency_js_include></record_update>]]></payload><payload_hash>1301687595</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>db214433db369740497856f3ce961919</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642a32860f0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>GoogleAPI.angularjs-google-maps.js</target_name><type>Dependency JS Includes</type><update_domain>global</update_domain><update_guid>7db493ee43f21740e0e3e7ff0225f7cb</update_guid><update_guid_history>7db493ee43f21740e0e3e7ff0225f7cb:1301687595</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>item_option_new_a115dcbedb761740497856f3ce9619f3</name><payload><![CDATA[<record_update table="item_option_new"><item_option_new action="INSERT_OR_UPDATE"><active>true</active><attributes/><cat_item display_value="Sample Page">3969622adbb21740497856f3ce961996</cat_item><category/><choice_direction>down</choice_direction><choice_field/><choice_table/><create_roles/><default_html_value/><default_value/><delete_roles/><delivery_plan/><description/><display_title>false</display_title><do_not_select_first>false</do_not_select_first><dynamic_default_value/><dynamic_ref_qual/><example_text/><field/><global>false</global><help_tag>More information</help_tag><help_text/><include_none>false</include_none><instructions/><layout>normal</layout><list_table/><lookup_label/><lookup_price/><lookup_table/><lookup_unique>false</lookup_unique><lookup_value/><macro/><mandatory>false</mandatory><map_to_field>false</map_to_field><mask_use_confirmation>false</mask_use_confirmation><mask_use_encryption>false</mask_use_encryption><name>postal_code</name><order>90</order><price_if_checked>0</price_if_checked><pricing_implications>false</pricing_implications><question_text>Zip Code</question_text><read_roles/><rec_lookup_price/><rec_price_if_checked>0</rec_price_if_checked><record/><record_producer_table/><reference/><reference_qual/><reference_qual_condition/><scale_max>5</scale_max><scale_min>0</scale_min><show_help>false</show_help><show_help_on_load>false</show_help_on_load><sp_widget/><summary_macro/><sys_class_name>item_option_new</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:53:05</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>a115dcbedb761740497856f3ce9619f3</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Zip Code</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>item_option_new_a115dcbedb761740497856f3ce9619f3</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:56:25</sys_updated_on><table/><tooltip/><type>6</type><ui_page/><use_dynamic_default>false</use_dynamic_default><use_reference_qualifier>simple</use_reference_qualifier><variable_name/><variable_set/><variable_width/><visibility>1</visibility><visible_bundle>true</visible_bundle><visible_guide>true</visible_guide><visible_standalone>true</visible_standalone><visible_summary>true</visible_summary><write_roles/></item_option_new><sys_translated_text action="delete_multiple" query="documentkey=a115dcbedb761740497856f3ce9619f3"/><fx_price action="delete_multiple" query="id=a115dcbedb761740497856f3ce9619f3"/><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>price_if_checked</field><id>a115dcbedb761740497856f3ce9619f3</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:53:05</sys_created_on><sys_id>ad15dcbedb761740497856f3ce9619f4</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:53:05</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price><fx_price action="INSERT_OR_UPDATE"><amount>0</amount><currency display_value="USD">USD</currency><field>rec_price_if_checked</field><id>a115dcbedb761740497856f3ce9619f3</id><parent/><reference_amount>0</reference_amount><reference_currency display_value="USD">USD</reference_currency><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 05:53:05</sys_created_on><sys_id>6515dcbedb761740497856f3ce9619f4</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 05:53:05</sys_updated_on><table>item_option_new</table><type>calculated</type></fx_price></record_update>]]></payload><payload_hash>-897647377</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>df214433db369740497856f3ce961918</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642b370d9f0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>Zip Code</target_name><type>Variable</type><update_domain>global</update_domain><update_guid>16d594fec2761740c59e1e8a545c02be</update_guid><update_guid_history>16d594fec2761740c59e1e8a545c02be:-897647377,ad15dcbe4c7617404f2a0078037163f7:2080912414</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>sp_js_include_7994dfaedbf21740497856f3ce9619dd</name><payload><![CDATA[<record_update table="sp_js_include"><sp_js_include action="INSERT_OR_UPDATE"><display_name>angularjs-google-maps.js</display_name><source>local</source><sys_class_name>sp_js_include</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 01:11:51</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>7994dfaedbf21740497856f3ce9619dd</sys_id><sys_mod_count>0</sys_mod_count><sys_name>angularjs-google-maps.js</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_ui_script display_value="angularjs-google-maps.js">1394d3eedbf21740497856f3ce9619b9</sys_ui_script><sys_update_name>sp_js_include_7994dfaedbf21740497856f3ce9619dd</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 01:11:51</sys_updated_on><url/></sp_js_include></record_update>]]></payload><payload_hash>907974636</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>e3214433db369740497856f3ce96191b</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642a3285fa0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>angularjs-google-maps.js</target_name><type>JS Include</type><update_domain>global</update_domain><update_guid>31b493eef2f217404961c473303cbaca</update_guid><update_guid_history>31b493eef2f217404961c473303cbaca:907974636</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>m2m_sp_widget_dependency_ff641f2adbf21740497856f3ce961989</name><payload><![CDATA[<record_update table="m2m_sp_widget_dependency"><m2m_sp_widget_dependency action="INSERT_OR_UPDATE"><sp_dependency display_value="GoogleAPI">e544dfaedbf21740497856f3ce9619d9</sp_dependency><sp_widget display_value="new Test">50e3dbaedbf21740497856f3ce9619e2</sp_widget><sys_class_name>m2m_sp_widget_dependency</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2018-06-23 01:10:37</sys_created_on><sys_customer_update>false</sys_customer_update><sys_id>ff641f2adbf21740497856f3ce961989</sys_id><sys_mod_count>0</sys_mod_count><sys_name>GoogleAPI.new Test</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_replace_on_upgrade>false</sys_replace_on_upgrade><sys_scope display_value="Global">global</sys_scope><sys_update_name>m2m_sp_widget_dependency_ff641f2adbf21740497856f3ce961989</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-06-23 01:10:37</sys_updated_on></m2m_sp_widget_dependency></record_update>]]></payload><payload_hash>-2048484728</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>e7214433db369740497856f3ce96191a</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>1642a3164490000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>GoogleAPI.new Test</target_name><type>Widget Dependency</type><update_domain>global</update_domain><update_guid>bb641f2acbf217401a0a8c5ec6341c8b</update_guid><update_guid_history>bb641f2acbf217401a0a8c5ec6341c8b:-2048484728</update_guid_history><update_set/><view/></sys_update_xml><sys_update_xml><action>INSERT_OR_UPDATE</action><application display_value="Global">global</application><category>customer</category><comments/><name>sp_widget_65db32afdb729740497856f3ce9619cb</name><payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope) {
  /* widget controller */
  var c = this;
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id/&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;GoogleMaps&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-06-26 01:57:15&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;65db32afdb729740497856f3ce9619cb&lt;/sys_id&gt;&lt;sys_mod_count&gt;9&lt;/sys_mod_count&gt;&lt;sys_name&gt;GoogleMaps&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_65db32afdb729740497856f3ce9619cb&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-06-26 02:05:35&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;ng-map id="map" zoom="15" center="[40.71, -74.21]"&gt;
    &lt;marker position="[40.71, -74.21]" title="hello"&gt;&lt;/marker&gt;
  &lt;/ng-map&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload><payload_hash>1025449760</payload_hash><remote_update_set display_value="Auto Complete test">5f214433db369740497856f3ce961916</remote_update_set><replace_on_upgrade>false</replace_on_upgrade><sys_created_by>brent.llewellyn</sys_created_by><sys_created_on>2018-06-26 07:00:02</sys_created_on><sys_id>ef214433db369740497856f3ce96191b</sys_id><sys_mod_count>0</sys_mod_count><sys_recorded_at>16439d6ca6c0000001</sys_recorded_at><sys_updated_by>brent.llewellyn</sys_updated_by><sys_updated_on>2018-06-26 07:00:02</sys_updated_on><table/><target_name>GoogleMaps</target_name><type>Widget</type><update_domain>global</update_domain><update_guid>cecdfeef5d7297409fdd2685c11f290f</update_guid><update_guid_history>cecdfeef5d7297409fdd2685c11f290f:1025449760,37bdf22370b29740cf86cef5e88cd479:-83621062,3fad32ef9e729740c5352af34ec1f2fa:1526458140,ccad722303b2974013df2e472a7aef49:-1457217785,d58d3eaf37729740aaa81f3d03ab0ae6:644079295,5a6dfaef2072974036e80f825f0a2611:-1457217785,404dfaeff072974086ff2cf9c48620d9:1531972205,45fc3eefba729740b9fae35788dffcc0:-1467746731,34dc32af4b729740a64205b244ba0cd4:2074680068,dceb36aff2729740b1e1c7929c1565ff:-854106325</update_guid_history><update_set/><view/></sys_update_xml></unload>